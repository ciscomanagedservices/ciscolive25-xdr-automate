{
  "workflow": {
    "unique_name": "definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7",
    "name": "XDR Incident MultiAgent Orchestrator",
    "title": "XDR Incident MultiAgent Orchestrator",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "incident-6aa90ad6-6d9f-4ba6-8f20-6e12c2edbdf4",
          "scope": "input",
          "name": "i_xdr_incident_id",
          "type": "datatype.string",
          "description": "ID of XDR incident.  The value of this ID will be overwritten from the incident automation rule if i_triggered_by_automation_rule = True",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "l_incident_summary",
          "type": "datatype.string",
          "description": "Summary of the incident",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZTYMA1AKE01Bbtx2vCUI6JDcn2Dz8gB",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 1,
          "scope": "local",
          "name": "l_loop_number",
          "type": "datatype.integer",
          "description": "Holds the current loop number",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLFDEZ47VNLyKzIqzH7MuzBH6ZE2",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "1.  Analyze information from the incident\n2.  Based on the incident information and custom instructions, formulate a plan of how to investigate and remediate the incident.\n3.  Update the XDR Incident with a customer facing update that describes a summary of the incident and plan of action.\n4.  Hand off a plan to the incident investigator agent to further investigate and mitigate the impact.\n\n* ALWAYS update next agent of special handling instructions or constraints such as requiring approvals before changes.",
          "scope": "local",
          "name": "l_agent_task",
          "type": "datatype.string",
          "description": "Controls the task that the next agent should perform",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JJ1AR8TMES10RahWGdOBiMRRsPtk8Kzcx",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "o_final_answer",
          "type": "datatype.string",
          "description": "The final answer from the LLM after working through the incident with its available tools",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLFK4F21RPwP3xwsvfrRgweFmQju",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "planner_agent",
          "scope": "local",
          "name": "l_next_agent",
          "type": "datatype.string",
          "description": "Controls which agent to task next",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "l_custom_instructions",
          "type": "datatype.string",
          "description": "Holds custom instructions for current incident retrieved from a Vector DB",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02JIZAQBLFXB91ikUD3u3rLbRZxRVfT4jPn",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "l_next_agent_instructions",
          "type": "datatype.string",
          "description": "Instructions for next agent",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JZD9MRSJEZ87jMZ60VTEEgFbHN6lGoois",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "l_agent_messages",
          "type": "datatype.string",
          "description": "List of messages from the AI agents ",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02JZD3E7NA6N45IJWWq52cbQYOtSQXm4QLB",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": true,
          "scope": "input",
          "name": "i_triggered_from_automation_rule",
          "type": "datatype.boolean",
          "description": "Set to True in automation rule so that the incident data is pulled from trigger output",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLGOKL5CWQrJ6qoA91qyoXXxtqWW",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 15,
          "scope": "local",
          "name": "l_recursion_limit",
          "type": "datatype.integer",
          "description": "Defines the maximum number of runs between agents",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLF1IQ4NXkx0s6WfPZLGKQ8QPUCa",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "l_langsmith_parent_run_id",
          "type": "datatype.string",
          "description": "Langsmith parent run id",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLHRFX6SvyAyDfZqrVIgEfXeNxuy",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "\"XDR_AI_Agent_Tool\"",
          "scope": "input",
          "name": "i_investigator_agent_tool_workflow_category",
          "type": "datatype.string",
          "description": "The comma separated list of categories in XDR Automate which will be used to select the list of 'tools' for the Investigator AI agent",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLGYO360j5iZ0KMQXT6OftJGSli1",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "\"Tool-Update_XDR_Incident\"",
          "scope": "input",
          "name": "i_planner_agent_tool_workflow_category",
          "type": "datatype.string",
          "description": "The tool category for the tools available to the planner agent",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02JJ01ODYPIOW6geWBzUrVb4RZHgl0ffqLA",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "false",
          "scope": "local",
          "name": "l_loop_end",
          "type": "datatype.string",
          "description": "Determines if the LLM loop should be ended",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02JIZAQBLHEB36KDpp7Hrq7L29jUQiAkaSd",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "automation_rules": {
        "type": [
          "incident.rule_event"
        ]
      },
      "delete_workflow_instance": false,
      "description": "Top level workflow which orchestrates an AI based agent team working on a particular incident, employing tools as needed.",
      "display_name": "XDR Incident MultiAgent Orchestrator",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "no_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02JIZAQGWYC6K7kghxfgN8KrQXptrUHUD6c",
        "name": "Condition Block",
        "title": "Triggered by incident automation rule?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Triggered by incident automation rule?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02JIZAQI8YF8Y71Yo3zOPEzIe0pezlcVIGf",
            "name": "Condition Branch",
            "title": "i_triggered_from_automation_rule==true",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.input.variable_workflow_02JIZAQBLGOKL5CWQrJ6qoA91qyoXXxtqWW$",
                "operator": "eq",
                "right_operand": true
              },
              "continue_on_failure": false,
              "display_name": "i_triggered_from_automation_rule==true",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02JIZAQJMRQBU1PQVjVIR9WIV5aM7Dt0qLz",
                "name": "Split String",
                "title": "Strip URL from incident ID trigger",
                "type": "core.splitstring",
                "base_type": "activity",
                "properties": {
                  "boundaries": [
                    {
                      "boundary": "/"
                    }
                  ],
                  "continue_on_failure": false,
                  "display_name": "Strip URL from incident ID trigger",
                  "input_string": "$rule.incident rule_event.output.incident.id$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02JIZAQL50EAO2iDMgVJuUsYbpLJaftg2kb",
                "name": "Set Variables",
                "title": "Override i_xdr_incident_id with trigger incident id",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Override i_xdr_incident_id with trigger incident id",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.input.variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8$",
                      "variable_value_new": "$activity.definition_activity_02JIZAQJMRQBU1PQVjVIR9WIV5aM7Dt0qLz.output.parts[-1]$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02JZSRBCKY0YN2AEEqM4vBziqhDDns3ekad",
        "name": "Group",
        "title": "Get XDR Incident Data",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Gets XDR Incident Data and creates string",
          "display_name": "Get XDR Incident Data",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02JIZAQMJTGYH2OFcvx57QOcW4ljHjUn66b",
            "name": "HTTP Request",
            "title": "Get XDR Incident Summary",
            "type": "web-service.http_request",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "allow_auto_redirect": true,
              "allow_headers_redirect": false,
              "continue_on_error_status_code": false,
              "continue_on_failure": false,
              "display_name": "Get XDR Incident Summary",
              "method": "GET",
              "relative_url": "/private-intel/incident/$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.input.variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8$/summary",
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "override_workflow_target": true,
                "target_id": "$module_target;Cisco XDR;securex:ao:iroh_api;platform-apis$"
              }
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JIZAQNVPDNH2SKI3MZC8Dzj4qliTrALln",
            "name": "Execute Python Script",
            "title": "Create Incident Summary String",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "This script will create an incident summary string to be sent to the AI",
              "display_name": "Create Incident Summary String",
              "script": "import json\nimport sys\nimport re\n\ndef parse_json(input_json, incident_id):\n    try:\n        # Load the JSON data from the provided string\n        data = json.loads(input_json)\n\n        # Extract the linkedIncidents part of the JSON\n        linked_incidents = data.get(\"linkedIncidents\", [])[0]\n\n        # Extract the ID from the incident URL (no longer used)\n        # incident_id_match = re.search(r'incident-(\\w+-\\w+-\\w+-\\w+-\\w+)', linked_incidents.get('id', ''))\n        # incident_id = incident_id_match.group(1) if incident_id_match else 'N/A'\n\n        # Initialize a list to collect target observables\n        target_observables = []\n\n        # Extract the target observables from the groups within the graph part of the JSON\n        graph_data = data.get(\"graph\", {})\n        groups_data = graph_data.get(\"groups\", {})\n\n        # Iterate through each group in groups\n        for group_id, group_content in groups_data.items():\n            # Check if the group data type is 'target'\n            group_data = group_content.get(\"data\", {})\n            if group_data.get(\"type\") == \"target\":\n                # If it is, extract the observables\n                observables = group_data.get(\"observables\", [])\n                for observable in observables:\n                    # Store the observables in the list with the required format\n                    target_observables.append(f\"{observable.get('type')}={observable.get('value')}\")\n\n        # Join all the target observables into a string\n        target_observables_str = \", \".join(target_observables)\n\n        # Extract observable values from the observables part of the JSON\n        observables_data = data.get(\"observables\", {}).get(\"data\", [])\n        observable_values = [observable.get(\"value\", 'N/A') for observable in observables_data]\n        observable_values_str = \", \".join(observable_values)\n\n        # Create the formatted string using the extracted data\n        formatted_str = f\"Incident ID: {incident_id}\\n\"\n        formatted_str += f\"Title: {linked_incidents.get('title', 'N/A')}\\n\"\n        formatted_str += f\"Description: {linked_incidents.get('description', 'N/A')}\\n\"\n        formatted_str += f\"Short Description: {linked_incidents.get('short_description', 'N/A')}\\n\"\n        formatted_str += f\"Source: {linked_incidents.get('source', 'N/A')}\\n\"\n        formatted_str += f\"Endpoint/Target: {target_observables_str}\\n\"\n        formatted_str += f\"Observables: {observable_values_str}\\n\"\n        formatted_str += f\"Techniques: {linked_incidents.get('techniques', 'N/A')}\\n\"\n        formatted_str += f\"Tactics: {linked_incidents.get('tactics', 'N/A')}\\n\"\n        formatted_str += f\"Confidence: {linked_incidents.get('confidence', 'N/A')}\\n\"\n        formatted_str += f\"firstEventDate: {data.get('firstEventDate', 'N/A')}\\n\"\n        formatted_str += f\"lastEventDate: {data.get('lastEventDate', 'N/A')}\\n\"\n\n        return formatted_str\n\n    except json.JSONDecodeError as e:\n        print(f\"Failed to parse JSON: {e}\")\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n\n# create the output string\nincident_summary_string = parse_json(sys.argv[1], sys.argv[2])",
              "script_arguments": [
                "$activity.definition_activity_02JIZAQMJTGYH2OFcvx57QOcW4ljHjUn66b.output.response_body$",
                "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.input.variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8$"
              ],
              "script_queries": [
                {
                  "script_query": "incident_summary_string",
                  "script_query_name": "incident_summary_string",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02JIZAQP3E1080MPxP2cIblGhQmF9jBBO2y",
        "name": "Group",
        "title": "Get Instructions for Incident",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Get Instructions for Incident",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02JIZAQQZHTTY627GSnvUk9tYhI9BUOjlxw",
            "name": "JSONPath Query",
            "title": "Parse out Incident Title",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Parse out Incident Title",
              "input_json": "$activity.definition_activity_02JIZAQMJTGYH2OFcvx57QOcW4ljHjUn66b.output.response_body$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "$..linkedIncidents..title",
                  "jsonpath_query_name": "incident_title",
                  "jsonpath_query_type": "string",
                  "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JIZAQSTHOMT5qItCln9OZsXanvZRwKu1O",
            "name": "Query Pinecone w/ OpenAI Embeddings for Incident",
            "title": "Query Pinecone w/ OpenAI Embeddings for Incident",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Query Pinecone w/ OpenAI Embeddings for Incident",
              "input": {
                "variable_workflow_02I5LQEFWRJAP0nBEcirgA5hcT6kB5j3JLa": "$activity.definition_activity_02JIZAQQZHTTY627GSnvUk9tYhI9BUOjlxw.output.jsonpath_queries.incident_title$",
                "variable_workflow_02I5M0WG2GGFL37jTv9OO8cNW83qrJawlmh": 1
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "no_target": true
              },
              "workflow_id": "definition_workflow_02I5LQEFBMEB422JHRKY7g4FJXQLOJiYPJy",
              "workflow_name": "Query Pinecone With OpenAI Embeddings"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JIZAQUMA4ZA0pp0h0OMpzVbBdN93HF2B2",
            "name": "JSONPath Query",
            "title": "Parse out instructions",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Parse out instructions",
              "input_json": "$activity.definition_activity_02JIZAQSTHOMT5qItCln9OZsXanvZRwKu1O.output.variable_workflow_02I5LSY181RIA79QRjeKNBR5VX1t7SKEqH5$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "$.matches..metadata.instructions",
                  "jsonpath_query_name": "custom_instructions",
                  "jsonpath_query_type": "string",
                  "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JIZAQVYSWCV5UGHgEjwDKu1xvKPpw2Z5g",
            "name": "Set Variables",
            "title": "Set l_custom_instructions",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Set l_custom_instructions",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZAQBLFXB91ikUD3u3rLbRZxRVfT4jPn$",
                  "variable_value_new": "$activity.definition_activity_02JIZAQUMA4ZA0pp0h0OMpzVbBdN93HF2B2.output.jsonpath_queries.custom_instructions$"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02JIZAQYINRZ314WaAOUgqeW1FogIvSTmLC",
        "name": "Execute Python Script",
        "title": "Create Langsmith parent_run_id and name",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Creates the langsmith parent_run_id and name of overall run",
          "display_name": "Create Langsmith parent_run_id and name",
          "script": "import uuid\nimport sys\ninstance_id = sys.argv[1]\nlangsmith_parent_run_id = str(uuid.uuid4())\nlangsmith_run_name = f'XDR Incident Agent {instance_id}'",
          "script_arguments": [
            "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.output.instance_id$"
          ],
          "script_queries": [
            {
              "script_query": "langsmith_parent_run_id",
              "script_query_name": "langsmith_parent_run_id",
              "script_query_type": "string"
            },
            {
              "script_query": "langsmith_run_name",
              "script_query_name": "langsmith_run_name",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02JIZAQZUN8IN0UkgII6NfOuSPIPDkN3Z6T",
        "name": "Set Variables",
        "title": "Set  local variables",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Set  local variables",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZAQBLHRFX6SvyAyDfZqrVIgEfXeNxuy$",
              "variable_value_new": "$activity.definition_activity_02JIZAQYINRZ314WaAOUgqeW1FogIvSTmLC.output.script_queries.langsmith_parent_run_id$"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZTYMA1AKE01Bbtx2vCUI6JDcn2Dz8gB$",
              "variable_value_new": "$activity.definition_activity_02JIZAQNVPDNH2SKI3MZC8Dzj4qliTrALln.output.script_queries.incident_summary_string$"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02JZSNR1LTYSO3NraemYMoB2alkiDcJ3trV",
        "name": "While Loop",
        "title": "While Loop",
        "type": "logic.while",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "While Loop",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02JZSNR26JZIO1KJn53fn10J57earpX6dBE",
            "name": "Condition Branch",
            "title": "While next_agent = planner or investigator",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe$",
                  "operator": "eq",
                  "right_operand": "planner_agent"
                },
                "operator": "or",
                "right_operand": {
                  "left_operand": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe$",
                  "operator": "eq",
                  "right_operand": "investigator_agent"
                }
              },
              "continue_on_failure": false,
              "display_name": "While next_agent = planner or investigator",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02JJ17F9BOI3Z0UlrfCBkTKjzoeEefZmdwe",
                "name": "Condition Block",
                "title": "Condition Block",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Condition Block",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02JJ17F9TL2AO65VroEQDdP2jVj8TNmWTM3",
                    "name": "Condition Branch",
                    "title": "Planner Agent",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe$",
                        "operator": "eq",
                        "right_operand": "planner_agent"
                      },
                      "continue_on_failure": false,
                      "display_name": "Planner Agent",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02JIZG9TQCRWY5IYbBVpPbVWYX0OVQwUyFA",
                        "name": "Planner Agent WF",
                        "title": "Planner Agent WF",
                        "type": "workflow.sub_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Planner Agent WF",
                          "input": {
                            "variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.input.variable_workflow_02JJ01ODYPIOW6geWBzUrVb4RZHgl0ffqLA$",
                            "variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0": 25,
                            "variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83": "Incident Triage/Planner Agent",
                            "variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe": "As an autonomous IT Security Operations Engineer AI Planner agent, you are tasked with managing security incidents in accordance with the SANS incident response methodology.\nYour job is to perform the following actions on a given incident:\n\n1.  Investigator Agent Protocol:\nThe investigator agent should use all available tools methodically.\n* Tools available to investigator agent can include Cisco Secure Endpoint and Umbrella.\n* If an incident remains unresolved with the resources at hand, record this status update.\n* Endpoint Analysis: Poll and analyze  the current security health and matching events of the endpoints using tools such as Secure Endpoint.\n* Incident Note Updates: Consistently update the XDR incident notes via a tool call with verbose and detailed data during pivotal stages, including:\nCommencement of the investigation,\nDiagnosis / Assessment of Investigation Findings,\n[Before submitting a change approval request (This step requires a mandatory confirmation in the system)],\nPost-remediation efforts,\nDiscovery of significant findings.\n2. Handoff to 'end' if no further action is required.\n\nRemember to ALWAYS tell investigator agents to use tools to investigate and/or validate the incident before taking action!\n\nConstraints:\n* Any changes that are to be production systems by the security investigator agent require change approval.\n* All tools and functions employed should comply with the naming convention regex pattern: ^[a-zA-Z0-9_-]{1,64}$.\n* In case of a 404 error from an API call, verify the API path for accuracy and attempt one retry.\n\n\nYou are assigned the following incident:\n\n$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZTYMA1AKE01Bbtx2vCUI6JDcn2Dz8gB$\n\nCustom incident handing instructions:\n\n$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZAQBLFXB91ikUD3u3rLbRZxRVfT4jPn$",
                            "variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H": "Utilize the following JSON template as your final output format:\n\n{ \"handoff\" : true,\n\"next_agent\": \"\u003cname of agent\u003e\",\n\"steps_taken\": \"\",\n\"next_agent_task_instructions\": \"\"\n}\n\n* Respond with just the JSON above.\n* If no handoff is required, set handoff to false which ends incident handling.\n* next_agent - options are: investigator_agent, end\n* Set handoff_agent to 'end' if no further actions are required.\n* handoff_agent_task_instructions - This is the message to be sent to the next agent include as much information as possible for the next agent to continue to the task.  Do not follow incident update format here.",
                            "variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ1AR8TMES10RahWGdOBiMRRsPtk8Kzcx$"
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "no_target": true
                          },
                          "workflow_id": "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI",
                          "workflow_name": "XDR AI Agent"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02JZD5PMLAEH17ZV3bbcPTaJITUuTWXm8R9",
                        "name": "Execute Python Script",
                        "title": "Parse Agent Output",
                        "type": "python3.script",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Parse Agent Output",
                          "script": "import sys\nimport json\n\n# Retrieve and clean the input JSON string\nai_agent_output = sys.argv[1].replace('```json', '').replace('```', '')\n\n# Default values\nl_next_agent = 'investigator_agent'\nl_handoff = True\nl_next_agent_instructions = ''\n\ntry:\n    # Extract JSON part and parse it\n    if '{' in ai_agent_output:\n        ai_agent_output = '{' + ai_agent_output.split('{', 1)[1]\n        ai_agent_output = json.loads(ai_agent_output)\n\n        # Assign values from JSON, with default values if keys are missing\n        l_next_agent = ai_agent_output.get('next_agent', 'end')\n        l_next_agent_instructions = ai_agent_output.get('next_agent_task_instructions', '')\n\nexcept json.JSONDecodeError:\n    print(\"Error parsing JSON. Using default values.\")\n\n# Output the results (or continue processing)\nprint(f\"Next Agent: {l_next_agent}\")\nprint(f\"Handoff: {l_handoff}\")\nprint(f\"Next Agent Instructions: {l_next_agent_instructions}\")",
                          "script_arguments": [
                            "$activity.definition_activity_02JIZG9TQCRWY5IYbBVpPbVWYX0OVQwUyFA.output.variable_workflow_02JGIZBI2GEHG6qbCJBPwc0RqVXn6uATeYx$"
                          ],
                          "script_queries": [
                            {
                              "script_query": "l_next_agent",
                              "script_query_name": "l_next_agent",
                              "script_query_type": "string"
                            },
                            {
                              "script_query": "l_handoff",
                              "script_query_name": "l_handoff",
                              "script_query_type": "string"
                            },
                            {
                              "script_query": "l_next_agent_instructions",
                              "script_query_name": "l_next_agent_instructions",
                              "script_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02JZDFDNOSVA53gy7jALejOs7lxDnKc1mr5",
                        "name": "Set Variables",
                        "title": "Set Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ1AR8TMES10RahWGdOBiMRRsPtk8Kzcx$",
                              "variable_value_new": "$activity.definition_activity_02JZD5PMLAEH17ZV3bbcPTaJITUuTWXm8R9.output.script_queries.l_next_agent_instructions$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe$",
                              "variable_value_new": "$activity.definition_activity_02JZD5PMLAEH17ZV3bbcPTaJITUuTWXm8R9.output.script_queries.l_next_agent$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02JJ17FA8HH7N2cAWKBVbFKOiwoqyU8iND4",
                    "name": "Condition Branch",
                    "title": "Investigator Agent",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe$",
                        "operator": "eq",
                        "right_operand": "investigator_agent"
                      },
                      "continue_on_failure": false,
                      "display_name": "Investigator Agent",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02JJ6V90ZKR320ED2kg2NswJK0WLocIAOMV",
                        "name": "Investigator Agent WF",
                        "title": "Investigator Agent WF",
                        "type": "workflow.sub_workflow",
                        "base_type": "subworkflow",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Investigator Agent WF",
                          "input": {
                            "variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.input.variable_workflow_02JIZAQBLGYO360j5iZ0KMQXT6OftJGSli1$",
                            "variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0": 25,
                            "variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83": "Security Investigator Agent",
                            "variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe": "As an autonomous IT Security Operations Engineer AI agent, you are tasked with managing security incidents in accordance with the SANS incident response methodology. It is critical to follow the protocol below to ensure a systematic and thorough approach:\n\n1. Investigation Protocol: Use all available toaols methodically during your investigation. If an incident remains unresolved with the resources at hand, record this status update.\n3. Endpoint Analysis: Poll and analyze  the current security health and matching events of the endpoints using tools such as Secure Endpoint.\n4. Incident Note Updates: Consistently update the XDR incident notes via a tool call with verbose and detailed data during pivotal stages, including:\nDiagnosis / Assessment of Investigation Findings,\n[Before submitting a change approval request (This step requires a mandatory confirmation in the system)],\nPost-remediation efforts,\nDiscovery of significant findings.\n5. Evidence Documentation: Document all technical evidence from Cisco Security tools, such as API responses, within the incident updates to support your analysis and actions.\n6. Resolution Documentation: When you have resolved the incident, fully utilized all available tools, or determined that the issue requires escalation, please signify the completion in your message by appending the tag '{{FINAL_ANSWER}}'.\n7. Configuration Recommendations: If the resolution is unclear, avoid guessing with configurations. Instead, offer a comprehensive, actionable recommendation for the customer.\n8. Change Approvals: Before implementing any changes, such as endpoint isolation, obtain the necessary approvals. Document the outcomes of these changes once you have executed them.\n9. Remember to always send a Diagnosis incident update via tool call before initiating a change approval.\n10. Remember to always pay close attention to \"Custom incident Handling Instructions: \", these are instructions you MUST carry out when they are provided.\n\nConstraints:\n* Do not copy the incident update in your response\n* Refrain from using any tools or functions that are beyond your access permissions.\n* All tools and functions employed should comply with the naming convention regex pattern: ^[a-zA-Z0-9_-]{1,64}$.\n* In case of a 404 error from an API call, verify the API path for accuracy and attempt one retry.\n\nYou are assigned the following incident:\n\n$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZTYMA1AKE01Bbtx2vCUI6JDcn2Dz8gB$\n\nCustom incident handing instructions:\n\n$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JIZAQBLFXB91ikUD3u3rLbRZxRVfT4jPn$\n",
                            "variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H": "Utilize the following JSON template as your final output format:\n\n{ \"handoff\" : true,\n\"next_agent\": \"\u003cname of agent\u003e\",\n\"steps_taken\": \"\",\n\"next_agent_task_instructions\": \"\"\n}\n\n* Respond with just the JSON above.\n* If no handoff is required, set handoff to false which ends incident handling.\n* handoff_agent - options are: planner_agent, reviewer_agent\n* Set handoff_agent to 'reviewer_agent' if no further actions are required.\n* handoff_agent_task_instructions - This is the message to be sent to the next agent include as much information as possible for the next agent to continue to the task.  Do not follow incident update format here.",
                            "variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H": "Proceed with the following plan/task utilizing all available tools:\n\n$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ1AR8TMES10RahWGdOBiMRRsPtk8Kzcx$"
                          },
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "no_target": true
                          },
                          "workflow_id": "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI",
                          "workflow_name": "XDR AI Agent"
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02JZDF19KUCDN5hpcads6zQb9zQxmEM9n36",
                        "name": "Execute Python Script",
                        "title": "Parse Agent Output",
                        "type": "python3.script",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Parse Agent Output",
                          "script": "import sys\nimport json\n\n# Retrieve and clean the input JSON string\nai_agent_output = sys.argv[1].replace('```json', '').replace('```', '')\n\n# Default values\nl_next_agent = 'end'\nl_handoff = False\nl_next_agent_instructions = ''\n\ntry:\n    # Extract JSON part and parse it\n    if '{' in ai_agent_output:\n        ai_agent_output = '{' + ai_agent_output.split('{', 1)[1]\n        ai_agent_output = json.loads(ai_agent_output)\n\n        # Assign values from JSON, with default values if keys are missing\n        l_next_agent = ai_agent_output.get('next_agent', 'end')\n        l_next_agent_instructions = ai_agent_output.get('next_agent_task_instructions', '')\n\nexcept json.JSONDecodeError:\n    print(\"Error parsing JSON. Using default values.\")\n\n# Output the results (or continue processing)\nprint(f\"Next Agent: {l_next_agent}\")\nprint(f\"Handoff: {l_handoff}\")\nprint(f\"Next Agent Instructions: {l_next_agent_instructions}\")",
                          "script_arguments": [
                            "$activity.definition_activity_02JJ6V90ZKR320ED2kg2NswJK0WLocIAOMV.output.variable_workflow_02JGIZBI2GEHG6qbCJBPwc0RqVXn6uATeYx$"
                          ],
                          "script_queries": [
                            {
                              "script_query": "l_next_agent",
                              "script_query_name": "l_next_agent",
                              "script_query_type": "string"
                            },
                            {
                              "script_query": "l_handoff",
                              "script_query_name": "l_handoff",
                              "script_query_type": "string"
                            },
                            {
                              "script_query": "l_next_agent_instructions",
                              "script_query_name": "l_next_agent_instructions",
                              "script_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02JZD4S7J7GJV51HJwh3Ap0SlWLZMmrQZLf",
                        "name": "Set Variables",
                        "title": "Set Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ1AR8TMES10RahWGdOBiMRRsPtk8Kzcx$",
                              "variable_value_new": "$activity.definition_activity_02JZDF19KUCDN5hpcads6zQb9zQxmEM9n36.output.script_queries.l_next_agent_instructions$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ18RXMDA4F3hvmSn72xQsOSoZ7OVeNSe$",
                              "variable_value_new": "$activity.definition_activity_02JZDF19KUCDN5hpcads6zQb9zQxmEM9n36.output.script_queries.l_next_agent$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JZD3E7NA6N45IJWWq52cbQYOtSQXm4QLB$",
                              "variable_value_new": "$activity.definition_activity_02JJ6V90ZKR320ED2kg2NswJK0WLocIAOMV.output.variable_workflow_02K1OU6XML3VV3V4xRCxRTQBhwGD593gZLX$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02JIZFVFF08JH1vwD2614NU6iR5mN7TnQch",
        "name": "Group",
        "title": "Reviewer / Notifier Agent",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Reviews the how the previous agents performed, makes last updates to ticket, and send notifications as needed",
          "display_name": "Reviewer / Notifier Agent",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02K3HO3YXP3N425zcLohJRpydKt0I0H51Of",
            "name": "Execute Python Script",
            "title": "Edit Last Agent Message History",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Edit Last Agent Message History",
              "script": "import json\nimport sys\nimport re\n\nl_messages = sys.argv[1]\nl_messages = json.loads(l_messages)\noriginal_system_prompt = l_messages.pop(0)\nl_messages = json.dumps(l_messages)",
              "script_arguments": [
                "$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JZD3E7NA6N45IJWWq52cbQYOtSQXm4QLB$"
              ],
              "script_queries": [
                {
                  "script_query": "l_messages",
                  "script_query_name": "l_messages",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JZCZC4QLNBU4yqBSEpc7YVGWmRw5eg8aN",
            "name": "Reviewer Agent WF",
            "title": "Reviewer Agent WF",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "AI agents reviews incident, adds final note and sends a webex notification to security team if needed",
              "display_name": "Reviewer Agent WF",
              "input": {
                "variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6": "\"Tool-Webex_Notification\", \"Tool-Update_XDR_Incident\"",
                "variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0": 25,
                "variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83": "Incident Reviewer/Notifier Agent",
                "variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe": "As an autonomous IT Security Operations Engineer AI reviewer agent, you are tasked with managing security incidents in accordance with the SANS incident response methodology.\nYour job is to perform the following actions based on the message history from the AI based incident investigator agent.\n\n1. The reviewer agent should use all available tools methodically.\n2. Update the XDR Incident with a final update which summarizes the incident, current status, actions taken, and next steps.\n3. Communication Via Webex: Use Webex tool to inform the security team about high-risk incidents, to request escalations for further investigation, and to report any isolations that have taken place.\n2. Handoff to 'end' as no further action is required.\n\nConstraints:\n* Any changes that are to be production systems by the security investigator agent require change approval.\n* All tools and functions employed should comply with the naming convention regex pattern: ^[a-zA-Z0-9_-]{1,64}$.\n* In case of a 404 error from an API call, verify the API path for accuracy and attempt one retry.\n\n\nCustom incident handing instructions:\n\n$activity.definition_activity_02K3HO3YXP3N425zcLohJRpydKt0I0H51Of.output.script_queries.l_messages$",
                "variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H": "Text",
                "variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H": "Review the message history from the previous AI agent(s)  and perform appropriate actions:\n\nInstructions from last agent:\n---\n$workflow.definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7.local.variable_workflow_02JJ1AR8TMES10RahWGdOBiMRRsPtk8Kzcx$\n\n===\n\nAgent message history:\n----\n$activity.definition_activity_02K3HO3YXP3N425zcLohJRpydKt0I0H51Of.output.script_queries.l_messages$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "no_target": true
              },
              "workflow_id": "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI",
              "workflow_name": "XDR AI Agent"
            },
            "object_type": "definition_activity"
          }
        ]
      }
    ],
    "categories": [
      "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M"
    ]
  },
  "categories": {
    "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85": {
      "unique_name": "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85",
      "name": "CLUS24",
      "title": "CLUS24",
      "type": "basic.category",
      "base_type": "category",
      "description": "Workflows \u0026 Atomic Actions for Cisco Live 2024 Session BRKATO-1557: Automating Detection \u0026 Response Outcomes using Cisco XDR and Generative AI",
      "category_type": "custom",
      "object_type": "category"
    },
    "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M": {
      "unique_name": "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
      "name": "CLEUR25",
      "title": "CLEUR25",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  },
  "rules": {
    "ruleevent_02DDPA66GKPWX21W0LR3GiDsSNz8UVgvZ1L": {
      "name": "CLUS - Send Incident to XDR AI Agent",
      "title": "CLUS - Send Incident to XDR AI Agent",
      "description": "This automation rule will send a newly created incident to the XDR AI Agent",
      "type": "incident.rule_event",
      "rule_type": "rule_event",
      "base_type": "rule",
      "object_type": "ruleevent",
      "version": "1.0.0",
      "properties": {
        "conditions": {
          "left_operand": "$output.incident.title$",
          "operator": "mregex",
          "right_operand": ".*\\[live\\]"
        },
        "description": "This automation rule will send a newly created incident to the XDR AI Agent",
        "disabled": false,
        "display_name": "CLUS - Send Incident to XDR AI Agent",
        "group_by": true,
        "rule_type": "rule_event",
        "stop_subsequent_rules": true,
        "title": "CLUS - Send Incident to XDR AI Agent",
        "workflows_config": [
          {
            "disabled": false,
            "ref_id": "definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7",
            "wf_input_variables": {
              "variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8": "incident-c4530825-ddc0-425c-ad9b-c9d5af14f1ba",
              "variable_workflow_02JIZAQBLGOKL5CWQrJ6qoA91qyoXXxtqWW": true,
              "variable_workflow_02JIZAQBLGYO360j5iZ0KMQXT6OftJGSli1": "\"XDR_AI_Agent_Tool\"",
              "variable_workflow_02JJ01ODYPIOW6geWBzUrVb4RZHgl0ffqLA": "\"Tool-Update_XDR_Incident\""
            },
            "status": {
              "state": "started-polling",
              "prev_state": "paused-polling",
              "error_msg": ""
            }
          }
        ]
      },
      "disabled": false,
      "unique_name": "ruleevent_02DDPA66GKPWX21W0LR3GiDsSNz8UVgvZ1L"
    },
    "ruleevent_02J60G9TXJ7447NJbX57V5uokE6J2deu2ic": {
      "name": "Command and Control DNS Activities",
      "title": "Command and Control DNS Activities",
      "type": "incident.rule_event",
      "rule_type": "rule_event",
      "base_type": "rule",
      "object_type": "ruleevent",
      "version": "1.0.0",
      "properties": {
        "conditions": {
          "left_operand": "$output.incident.title$",
          "operator": "mregex",
          "right_operand": "Command and Control DNS Activities.*"
        },
        "description": "",
        "disabled": true,
        "display_name": "Command and Control DNS Activities",
        "group_by": true,
        "rule_type": "rule_event",
        "stop_subsequent_rules": true,
        "title": "Command and Control DNS Activities",
        "workflows_config": [
          {
            "disabled": true,
            "ref_id": "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI",
            "wf_input_variables": {
              "variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6": "\"XDR_AI_Agent_Tool\"",
              "variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0": 25,
              "variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83": "intelligent assistant",
              "variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe": "Utilize the availalbe tools to perform the task assigned and output the results to the user.",
              "variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H": "Plain Text",
              "variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H": ""
            },
            "status": {
              "state": "stopped-polling",
              "prev_state": "stopped-polling",
              "error_msg": ""
            }
          },
          {
            "disabled": false,
            "ref_id": "definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7",
            "wf_input_variables": {
              "variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8": "incident-c4530825-ddc0-425c-ad9b-c9d5af14f1ba",
              "variable_workflow_02JIZAQBLGOKL5CWQrJ6qoA91qyoXXxtqWW": true,
              "variable_workflow_02JIZAQBLGYO360j5iZ0KMQXT6OftJGSli1": "\"XDR_AI_Agent_Tool\"",
              "variable_workflow_02JJ01ODYPIOW6geWBzUrVb4RZHgl0ffqLA": "\"Tool-Update_XDR_Incident\""
            },
            "status": {
              "state": "stopped-polling",
              "prev_state": "started-polling",
              "error_msg": ""
            }
          },
          {
            "disabled": true,
            "ref_id": "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI",
            "wf_input_variables": {
              "variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6": "\"XDR_AI_Agent_Tool\"",
              "variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0": 25,
              "variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83": "intelligent assistant",
              "variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe": "Utilize the availalbe tools to perform the task assigned and output the results to the user.",
              "variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H": "Plain Text",
              "variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H": ""
            },
            "status": {
              "state": "stopped-polling",
              "prev_state": "stopped-polling",
              "error_msg": ""
            }
          },
          {
            "disabled": false,
            "ref_id": "definition_workflow_02JIZAQB57V1J3ZjuoFo7ulzhuoHTX25Xz7",
            "wf_input_variables": {
              "variable_workflow_02JIZAQBLERYY7n1kEHLtQ2Qpd2C37yTBr8": "incident-c4530825-ddc0-425c-ad9b-c9d5af14f1ba",
              "variable_workflow_02JIZAQBLGOKL5CWQrJ6qoA91qyoXXxtqWW": true,
              "variable_workflow_02JIZAQBLGYO360j5iZ0KMQXT6OftJGSli1": "\"XDR_AI_Agent_Tool\"",
              "variable_workflow_02JJ01ODYPIOW6geWBzUrVb4RZHgl0ffqLA": "\"Tool-Update_XDR_Incident\""
            },
            "status": {
              "state": "stopped-polling",
              "prev_state": "started-polling",
              "error_msg": ""
            }
          }
        ]
      },
      "disabled": true,
      "unique_name": "ruleevent_02J60G9TXJ7447NJbX57V5uokE6J2deu2ic"
    }
  },
  "targets": {
    "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c": {
      "unique_name": "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c",
      "name": "CL - Pinecone",
      "title": "CL - Pinecone",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": false,
        "display_name": "CL - Pinecone",
        "host": "ciscolive-b2is8p9.svc.aped-4627-b74a.pinecone.io",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "protocol": "https"
      }
    }
  },
  "target_groups": {
    "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY": {
      "unique_name": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
      "name": "HTTP Targets",
      "title": "HTTP Targets",
      "type": "generic.target_group",
      "base_type": "target_group",
      "version": "1.0.0",
      "targets": [
        {
          "data_target_type": "web-service.endpoint",
          "view_target_type": "web-service.endpoint",
          "include_all_targets": true
        }
      ],
      "object_type": "target_group"
    }
  },
  "variables": {
    "variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm": {
      "unique_name": "variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm",
      "properties": {
        "value": "*****",
        "scope": "global",
        "name": "CL - Pinecone API Key",
        "type": "datatype.secure_string",
        "description": "API Key for accessing pinecone apis",
        "is_required": false,
        "display_on_wizard": false,
        "is_invisible": false,
        "variable_string_format": ""
      },
      "object_type": "variable"
    },
    "variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN": {
      "unique_name": "variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN",
      "properties": {
        "value": "*****",
        "scope": "global",
        "name": "CL - AzureOpenAI - API Key",
        "type": "datatype.secure_string",
        "is_required": false,
        "display_on_wizard": false,
        "is_invisible": false,
        "variable_string_format": ""
      },
      "object_type": "variable"
    }
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_02I5LQEFBMEB422JHRKY7g4FJXQLOJiYPJy",
        "name": "Query Pinecone With OpenAI Embeddings",
        "title": "Query Pinecone With OpenAI Embeddings",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_results",
              "type": "datatype.string",
              "description": "A JSON list of results, metadata, and scores",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02I5LSY181RIA79QRjeKNBR5VX1t7SKEqH5",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 2,
              "scope": "input",
              "name": "i_k",
              "type": "datatype.integer",
              "description": "Number of results to return",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02I5M0WG2GGFL37jTv9OO8cNW83qrJawlmh",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "i_input_query",
              "type": "datatype.string",
              "description": "The query which will be searched for similar results in pinecone",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02I5LQEFWRJAP0nBEcirgA5hcT6kB5j3JLa",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "display_name": "Query Pinecone With OpenAI Embeddings",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "no_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02I5LTJ2GIIJ145DRR0r5Xmq32UD2F4ie55",
            "name": "Get Embeddings for Input Query From OpenAI Embeddings",
            "title": "Get Embeddings for Input Query From OpenAI Embeddings",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Get Embeddings for Input Query From OpenAI Embeddings",
              "input": {
                "variable_workflow_02I266TFABZML2ETUcAflrTMdRri7NtHxvg": "poc-text-embedding-3-large",
                "variable_workflow_02I266TFACU0T4nJVQwgUOm6NwJLX2oio1O": "CL - AzureOpenAI",
                "variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS": "$global.variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN.global.variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN$",
                "variable_workflow_02I26AYEVQEFL5sMw1LGbt826iFNfrUepZM": true,
                "variable_workflow_02I26D3G137155NrpdzI8CsxasPk7Kxbcly": "2024-06-01",
                "variable_workflow_02I26JZI9L54B1lMQi6fKZXvWAfcEQeOsdb": "{\"input\": \"$workflow.definition_workflow_02I5LQEFBMEB422JHRKY7g4FJXQLOJiYPJy.input.variable_workflow_02I5LQEFWRJAP0nBEcirgA5hcT6kB5j3JLa$\"}"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "execute_on_this_target_group": true,
                "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY"
              },
              "workflow_id": "definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z",
              "workflow_name": "OpenAI Embeddings"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02I5LUHS6JG4G6vjuUfKj0Z6gWIF83zHVTG",
            "name": "JSONPath Query",
            "title": "JSONPath Query",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "JSONPath Query",
              "input_json": "$activity.definition_activity_02I5LTJ2GIIJ145DRR0r5Xmq32UD2F4ie55.output.variable_workflow_02I266TFAEV8D3GCoOMaIwTjS2YvkT6j7r1$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "$.data[0].embedding",
                  "jsonpath_query_name": "embedding_vector",
                  "jsonpath_query_type": "string",
                  "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02I5LW942WOP56WwrHrjO7aox8imk1RbsgO",
            "name": "Pinecone - Query Data By Vector",
            "title": "Pinecone - Query Data By Vector",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Pinecone - Query Data By Vector",
              "input": {
                "variable_workflow_02I5LB65SAPEE3k4k6FFpd7Tf4Dn0ISTuIn": "$activity.definition_activity_02I5LUHS6JG4G6vjuUfKj0Z6gWIF83zHVTG.output.jsonpath_queries.embedding_vector$",
                "variable_workflow_02I5LDLRAZ6NZ5OqGWNXbq2skh8xhDi8oWv": "$workflow.definition_workflow_02I5LQEFBMEB422JHRKY7g4FJXQLOJiYPJy.input.variable_workflow_02I5M0WG2GGFL37jTv9OO8cNW83qrJawlmh$",
                "variable_workflow_02I5LE92NSAIU2Gz2jbsl5e8HlrILa60Dj9": false,
                "variable_workflow_02I5LI6CEAD6R6xFxmJqWQF6O5kmWa9yVXE": true
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "execute_on_this_target": true,
                "target_id": "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c",
                "target_type": "web-service.endpoint"
              },
              "workflow_id": "definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3",
              "workflow_name": "Pinecone - Query Data By Vector"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02I5LWPIZE41Z2Vr4fcpTgh8utligIzrB1F",
            "name": "Set Variables",
            "title": "Set Output Variables",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Set Output Variables",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02I5LQEFBMEB422JHRKY7g4FJXQLOJiYPJy.output.variable_workflow_02I5LSY181RIA79QRjeKNBR5VX1t7SKEqH5$",
                  "variable_value_new": "$activity.definition_activity_02I5LW942WOP56WwrHrjO7aox8imk1RbsgO.output.variable_workflow_02I5LEP9DKBZE6a6dOudHGh5jnfkeLmq1dv$"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ],
        "categories": [
          "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
          "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
        ]
      },
      "subworkflows": [
        {
          "workflow": {
            "unique_name": "definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z",
            "name": "OpenAI Embeddings",
            "title": "OpenAI Embeddings",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.secure_string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "i_openai_api_key",
                  "type": "datatype.secure_string",
                  "description": "The api bearer token for openai or azure",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 30,
                  "scope": "local",
                  "name": "l_seconds_between_retries",
                  "type": "datatype.integer",
                  "description": "Maximum number of seconds between retry attempts. ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I266TFAFDDL5ebEkqQTTISxGJFUIaxr0i",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 1,
                  "scope": "local",
                  "name": "l_openai_retries",
                  "type": "datatype.integer",
                  "description": "Determines the number of retry attempts made to OpenAI",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": false,
                  "scope": "input",
                  "name": "i_azure",
                  "type": "datatype.boolean",
                  "description": "Set to true if using AzureOpenAI",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I26AYEVQEFL5sMw1LGbt826iFNfrUepZM",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "api.openai.com",
                  "scope": "input",
                  "name": "i_openai_http_target_name",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02I266TFACU0T4nJVQwgUOm6NwJLX2oio1O",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "text-embedding-ada-002",
                  "scope": "input",
                  "name": "i_model",
                  "type": "datatype.string",
                  "description": "LLM Model to be used.  For Azure, model is the same as deployment",
                  "is_required": false,
                  "display_on_wizard": true,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02I266TFABZML2ETUcAflrTMdRri7NtHxvg",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "output",
                  "name": "o_response",
                  "type": "datatype.string",
                  "description": "The tool calls from the response message",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02I266TFAEV8D3GCoOMaIwTjS2YvkT6j7r1",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "2024-06-01",
                  "scope": "input",
                  "name": "i_azure_api_version",
                  "type": "datatype.string",
                  "description": "The api-version used when executing with Azure",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02I26D3G137155NrpdzI8CsxasPk7Kxbcly",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "i_input",
                  "type": "datatype.string",
                  "description": "The input which will be sent to the embeddings model",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02I26JZI9L54B1lMQi6fKZXvWAfcEQeOsdb",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_response_data",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02I26J3PGLV4K1oc7FTRaHXd51SPELwGAhH",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "Executes a call to the Azure or OpenAI Embeddings API",
              "display_name": "OpenAI Embeddings",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "execute_on_target_group": true,
                "target_group": {
                  "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
                  "run_on_all_targets": false,
                  "selected_target_types": [
                    "web-service.endpoint"
                  ],
                  "use_criteria": {
                    "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                    "conditions": [
                      {
                        "operator": "eqi",
                        "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                        "right_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFACU0T4nJVQwgUOm6NwJLX2oio1O$"
                      }
                    ]
                  }
                }
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02I266TPE8ETW0wOAHDCbql13O6DgO4KIy7",
                "name": "While Loop",
                "title": "While Loop",
                "type": "logic.while",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "While Loop",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02I266TQNTCDQ2FGgmUHaSxKX8G2Abs7fvh",
                    "name": "Condition Branch",
                    "title": "If l_openai_retries \u003e= 0",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                        "operator": "gte",
                        "right_operand": 0
                      },
                      "continue_on_failure": false,
                      "display_name": "If l_openai_retries \u003e= 0",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02I26BXGSR8ID2RxjZaIki6xTmbw06pCXOk",
                        "name": "Execute Python Script",
                        "title": "Create URI And Body",
                        "type": "python3.script",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Create URI And Body",
                          "script": "import sys\nimport json\n\nmodel_id = sys.argv[1]\napi_version = sys.argv[2]\ninput_str = sys.argv[3]\nis_azure = sys.argv[4]\n\nif is_azure == 'true':\n  is_azure = True\nelse:\n  is_azure = False\n\nif is_azure:\n  embeddings_path = f'/openai/deployments/{model_id}/embeddings?api-version={api_version}'\n  embeddings_body = {\"input\": f\"{input_str}\"}\n  embeddings_body = json.dumps(embeddings_body)\nelse:\n  embeddings_path = '/embeddings'\n  embeddings_body = {\"input\": f\"{input_str}\", \"model\": model_id}\n  embeddings_body = json.dumps(embeddings_body)\n\n",
                          "script_arguments": [
                            "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFABZML2ETUcAflrTMdRri7NtHxvg$",
                            "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I26D3G137155NrpdzI8CsxasPk7Kxbcly$",
                            "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I26JZI9L54B1lMQi6fKZXvWAfcEQeOsdb$",
                            "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I26AYEVQEFL5sMw1LGbt826iFNfrUepZM$"
                          ],
                          "script_queries": [
                            {
                              "script_query": "embeddings_path",
                              "script_query_name": "embeddings_path",
                              "script_query_type": "string"
                            },
                            {
                              "script_query": "embeddings_body",
                              "script_query_name": "embeddings_body",
                              "script_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH",
                        "name": "HTTP Request",
                        "title": "Embeddings Request",
                        "type": "web-service.http_request",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 30,
                          "allow_auto_redirect": true,
                          "allow_headers_redirect": false,
                          "body": "$activity.definition_activity_02I26BXGSR8ID2RxjZaIki6xTmbw06pCXOk.output.script_queries.embeddings_body$",
                          "content_type": "application/json",
                          "continue_on_error_status_code": false,
                          "continue_on_failure": true,
                          "custom_headers": [
                            {
                              "name": "Authorization",
                              "value": "Bearer $workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS$"
                            },
                            {
                              "name": "api-key",
                              "value": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS$"
                            }
                          ],
                          "description": "Gets embeddings for a given query\n\n",
                          "display_name": "Embeddings Request",
                          "method": "POST",
                          "relative_url": "$activity.definition_activity_02I26BXGSR8ID2RxjZaIki6xTmbw06pCXOk.output.script_queries.embeddings_path$",
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "use_workflow_target_group": true
                          }
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02I266TTXPJQ500lXtsRyhUhiKPfLWNI5v7",
                        "name": "Condition Block",
                        "title": "Condition Block",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Condition Block",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02I266TVAPZZJ4sb99FGi5Bm0eUJa3w7dJF",
                            "name": "Condition Branch",
                            "title": "OpenAi Request Succeeded",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.succeeded$",
                                "operator": "eq",
                                "right_operand": true
                              },
                              "continue_on_failure": false,
                              "display_name": "OpenAi Request Succeeded",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02I266TX8S16A4yETtBtvWQVHaiDZpPRm9b",
                                "name": "Set Variables",
                                "title": "Set retries = -1",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set retries = -1",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                                      "variable_value_new": -1
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02I266TYM2YSL3PpGaiyXIsgROoNQjHXMcM",
                                "name": "Execute Python Script",
                                "title": "Process Response",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "display_name": "Process Response",
                                  "script": "import json\nimport sys\n\ntry:\n  o_response_data = json.loads(sys.argv[1])['data']\nexcept:\n  o_response_data = ''\n\no_response_data = json.dumps(o_response_data)",
                                  "script_arguments": [
                                    "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.response_body$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "o_response_data",
                                      "script_query_name": "o_response_data",
                                      "script_query_type": "string"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02I266U0QAP0X6lNKHgqDL0Ypta3Be4j2Ww",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.output.variable_workflow_02I266TFAEV8D3GCoOMaIwTjS2YvkT6j7r1$",
                                      "variable_value_new": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.response_body$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.output.variable_workflow_02I26J3PGLV4K1oc7FTRaHXd51SPELwGAhH$",
                                      "variable_value_new": "$activity.definition_activity_02I266TYM2YSL3PpGaiyXIsgROoNQjHXMcM.output.script_queries.o_response_data$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02I266U2TYTAC4BiCeb8jS1msQtE0QHr0qq",
                            "name": "Condition Branch",
                            "title": "OpenAi Request Failed And Retries Available",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.succeeded$",
                                  "operator": "eq",
                                  "right_operand": false
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                                  "operator": "gt",
                                  "right_operand": 0
                                }
                              },
                              "continue_on_failure": false,
                              "display_name": "OpenAi Request Failed And Retries Available",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02I266U4ZY8255vGujRRe9yD5wfAFAnFcgg",
                                "name": "Set Variables",
                                "title": "Decrease retry counter",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Decrease retry counter",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                                      "variable_value_new": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$ - 1"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02I266U6JDJ6K7JIP5jxZXC5XupJlwMjySB",
                                "name": "Sleep",
                                "title": "Sleep",
                                "type": "core.sleep",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Sleep",
                                  "skip_execution": false,
                                  "sleep_interval": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAFDDL5ebEkqQTTISxGJFUIaxr0i$"
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02I266U85XQK071zSwyk6hVR0I2sgZAR0Fu",
                            "name": "Condition Branch",
                            "title": "OpenAi Request Failed And No Retries",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.succeeded$",
                                  "operator": "eq",
                                  "right_operand": false
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                                  "operator": "eq",
                                  "right_operand": 0
                                }
                              },
                              "continue_on_failure": false,
                              "display_name": "OpenAi Request Failed And No Retries",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02I266U9UB00Q4Cnaif6Gd77LFiBBJXnMDS",
                                "name": "Completed",
                                "title": "Failed",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Failed",
                                  "result_message": "Error with OpenAI Request: $activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.error.message$",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "categories": [
              "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
              "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
            ]
          }
        },
        {
          "workflow": {
            "unique_name": "definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3",
            "name": "Pinecone - Query Data By Vector",
            "title": "Pinecone - Query Data By Vector",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "input",
                  "name": "i_vector",
                  "type": "datatype.string",
                  "description": "A vector to search.  \n\nFor example:\n[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02I5LB65SAPEE3k4k6FFpd7Tf4Dn0ISTuIn",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_response",
                  "type": "datatype.string",
                  "description": "The output response",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "json"
                },
                "unique_name": "variable_workflow_02I5LEP9DKBZE6a6dOudHGh5jnfkeLmq1dv",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": false,
                  "scope": "input",
                  "name": "i_include_values",
                  "type": "datatype.boolean",
                  "description": "determines if values are included in output",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I5LE92NSAIU2Gz2jbsl5e8HlrILa60Dj9",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "input",
                  "name": "i_include_metadata",
                  "type": "datatype.boolean",
                  "description": "If true includes metadata",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I5LI6CEAD6R6xFxmJqWQF6O5kmWa9yVXE",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 5,
                  "scope": "input",
                  "name": "i_k",
                  "type": "datatype.integer",
                  "description": "Number of returned matching vectors",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02I5LDLRAZ6NZ5OqGWNXbq2skh8xhDi8oWv",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "This workflow searches the index using a query vector. ",
              "display_name": "Pinecone - Query Data By Vector",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "target_type": "web-service.endpoint",
                "target_id": "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c",
                "execute_on_workflow_target": true
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02I5LB68JHL184OqhtaN5FTmLMbJgqD0bol",
                "name": "HTTP Request",
                "title": "Query Data",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "body": "{\n    \"vector\": $workflow.definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3.input.variable_workflow_02I5LB65SAPEE3k4k6FFpd7Tf4Dn0ISTuIn$,\n    \"topK\" : $workflow.definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3.input.variable_workflow_02I5LDLRAZ6NZ5OqGWNXbq2skh8xhDi8oWv$,\n    \"includeValues\": $workflow.definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3.input.variable_workflow_02I5LE92NSAIU2Gz2jbsl5e8HlrILa60Dj9$,\n    \"includeMetadata\": $workflow.definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3.input.variable_workflow_02I5LI6CEAD6R6xFxmJqWQF6O5kmWa9yVXE$\n}",
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Api-Key",
                      "value": "$global.variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm.global.variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm$"
                    }
                  ],
                  "display_name": "Query Data",
                  "method": "POST",
                  "relative_url": "/query",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02I5LFPNL9IT23i7Brp4MBqKcwRModzg9Px",
                "name": "Set Variables",
                "title": "Set Output Variables",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Output Variables",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3.output.variable_workflow_02I5LEP9DKBZE6a6dOudHGh5jnfkeLmq1dv$",
                      "variable_value_new": "$activity.definition_activity_02I5LB68JHL184OqhtaN5FTmLMbJgqD0bol.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ],
            "categories": [
              "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
              "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
            ]
          }
        }
      ],
      "dependent_workflows": [
        "definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z",
        "definition_workflow_02I5LB657DWXT5oyrJIvNplhUewb0EPcFe3"
      ]
    },
    {
      "workflow": {
        "unique_name": "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI",
        "name": "XDR AI Agent",
        "title": "XDR AI Agent",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "local",
              "name": "l_llm_system_prompt",
              "type": "datatype.string",
              "description": "The system prompt being sent to the LLM",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2EUAD02LUN9C7bScepBTn614s2k",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "false",
              "scope": "local",
              "name": "l_loop_end",
              "type": "datatype.string",
              "description": "Determines if the LLM loop should be ended",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2G7TZ0Wgjmo13m2RJS5PlyUg0UF",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "local",
              "name": "l_messages",
              "type": "datatype.string",
              "description": "The messages array (Chat History)",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 1,
              "scope": "local",
              "name": "l_iteration_number",
              "type": "datatype.integer",
              "description": "Holds the current iteration number with LLM",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2G18M0G08RJ8d9VXvDyiIKz2Myu",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "\"XDR_AI_Agent_Tool\"",
              "scope": "input",
              "name": "i_tool_workflow_category",
              "type": "datatype.string",
              "description": "The comma separated list of categories in XDR Automate which will be used to select the list of 'tools' for the AI agent",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "Plain Text",
              "scope": "input",
              "name": "i_agent_output_format",
              "type": "datatype.string",
              "description": "Tells agent how the output from the task should be formatted",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_final_answer",
              "type": "datatype.string",
              "description": "The final answer from the LLM after working through the incident with its available tools",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2GEHG6qbCJBPwc0RqVXn6uATeYx",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "Utilize the available tools to perform the task assigned and output the results to the user.",
              "scope": "input",
              "name": "i_agent_description",
              "type": "datatype.string",
              "description": "Description for the agent and how it should handle tasks including goals, constraints, and process flow",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "local",
              "name": "l_langsmith_parent_run_id",
              "type": "datatype.string",
              "description": "Langsmith parent run id",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2FS9B7FSvuEcFPQU1Vtau3xaLhq",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_messages",
              "type": "datatype.string",
              "description": "A copy of the l_messages variable exposed to the outside",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02K1OU6XML3VV3V4xRCxRTQBhwGD593gZLX",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "i_agent_task",
              "type": "datatype.string",
              "description": "The task that the agent should accomplish",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 25,
              "scope": "input",
              "name": "i_maximum_iterations",
              "type": "datatype.integer",
              "description": "Defines the maximum number of iterations working with the LLM. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "intelligent assistant",
              "scope": "input",
              "name": "i_agent_role",
              "type": "datatype.string",
              "description": "The role of the AI Agent",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "\nYou have been assigned the following task:\n",
              "scope": "local",
              "name": "l_llm_user_prompt_prefix",
              "type": "datatype.string",
              "description": "Defines the text which will be prefixed to the incident details sent to the LLM",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02JGIZBI2FEKZ35pfuNQpQ7e2oZxAVNtxcz",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "automation_rules": {
            "type": [
              "incident.rule_event"
            ]
          },
          "delete_workflow_instance": false,
          "description": "This workflow builds an intelligent agent which can perform a task, utilize tools, and generate an output",
          "display_name": "XDR AI Agent",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "no_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02JGIZC67SU414XdNn3Nkc6IUgshuPiNc7P",
            "name": "Execute Python Script",
            "title": "Create Messages Array",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Creates the messages array which will be sent to OpenAI",
              "display_name": "Create Messages Array",
              "script": "import json\nimport sys\n\nl_messages = json.loads(sys.argv[1])\nl_llm_user_prompt_prefix = sys.argv[2]\nl_llm_system_prompt = sys.argv[3]\ni_agent_description = sys.argv[4]\nrun_id = sys.argv[5]\ni_agent_output_format = sys.argv[6]\ni_agent_role = sys.argv[7]\ni_agent_task = sys.argv[8]\n\nllm_user_prompt = l_llm_user_prompt_prefix + \\\n                  f\"\\n{i_agent_task}\\n\"\nuser_prompt = {\n            \"role\": \"user\",\n            \"content\": llm_user_prompt\n               }\n\nl_llm_system_prompt = f\"\"\"\n{i_agent_description}\n\nRole: {i_agent_role}\n\nMessage Output Format:\n{i_agent_output_format}\n\"\"\"\nsystem_prompt = {\n            \"role\": \"system\",\n            \"content\": l_llm_system_prompt\n               }\n\nl_messages.append(system_prompt)\nl_messages.append(user_prompt)\nl_messages = json.dumps(l_messages)",
              "script_arguments": [
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2FEKZ35pfuNQpQ7e2oZxAVNtxcz$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2EUAD02LUN9C7bScepBTn614s2k$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.input.variable_workflow_02JGJ9KK458SW2aHCtUf0Q6ObsvfV1ujyxe$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.output.instance_id$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.input.variable_workflow_02JGJABEO1P1I6SqECqV9bzOC1UG4p14g1H$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.input.variable_workflow_02JGJ7NRF9KQ30dNyFAsVcMtICwPbwAmv83$",
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.input.variable_workflow_02JGJJYDEMSJI6k90JYS7ujy8bTYiBgrD9H$"
              ],
              "script_queries": [
                {
                  "script_query": "l_messages",
                  "script_query_name": "l_messages",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JGIZC7MKVGC0ayRWtoRGLhU6pABRpjLTX",
            "name": "Execute Python Script",
            "title": "Create Langsmith parent_run_id and name",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Creates the langsmith parent_run_id and name of overall run",
              "display_name": "Create Langsmith parent_run_id and name",
              "script": "import uuid\nimport sys\ninstance_id = sys.argv[1]\nlangsmith_parent_run_id = str(uuid.uuid4())\nlangsmith_run_name = f'XDR Incident Agent {instance_id}'",
              "script_arguments": [
                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.output.instance_id$"
              ],
              "script_queries": [
                {
                  "script_query": "langsmith_parent_run_id",
                  "script_query_name": "langsmith_parent_run_id",
                  "script_query_type": "string"
                },
                {
                  "script_query": "langsmith_run_name",
                  "script_query_name": "langsmith_run_name",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JGIZC91MT3J6aty7nrUDcO5uS2wCVBePu",
            "name": "Set Variables",
            "title": "Set l_messages and l_langsmith_parent_run_id variable",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Set l_messages and l_langsmith_parent_run_id variable",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                  "variable_value_new": "$activity.definition_activity_02JGIZC67SU414XdNn3Nkc6IUgshuPiNc7P.output.script_queries.l_messages$"
                },
                {
                  "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2FS9B7FSvuEcFPQU1Vtau3xaLhq$",
                  "variable_value_new": "$activity.definition_activity_02JGIZC7MKVGC0ayRWtoRGLhU6pABRpjLTX.output.script_queries.langsmith_parent_run_id$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JGIZCB2P1UB4cRIdY84vXCR7DXSIwTJCd",
            "name": "Convert XDR Automation Workflows to OpenAI Tools",
            "title": "Convert XDR Automation Workflows to OpenAI Tools",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Convert XDR Automation Workflows to OpenAI Tools",
              "input": {
                "variable_workflow_02DCX3X6TE2FC0CWVORoFxv6xZJd7RMOkA7": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.input.variable_workflow_02JGIZBI2F4J62YRrS6LJZhj1OjopF9yVp6$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "no_target": true
              },
              "workflow_id": "definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6",
              "workflow_name": "Convert XDR Automation Workflows to OpenAI Tools"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02JGIZCCNJ4T35muiu0mwXytUXbL6J4oRfd",
            "name": "While Loop",
            "title": "While Loop",
            "type": "logic.while",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "Loops calls to the LLM until either a maximum number of calls is reached or the LLM is completed its work",
              "display_name": "While Loop",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02JGIZCDUX3P03WBfTYALAysGkGb8wla3jf",
                "name": "Condition Branch",
                "title": "If l_loop_end == False OR l_iteration_num = l_maximum_iterations",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G7TZ0Wgjmo13m2RJS5PlyUg0UF$",
                      "operator": "eq",
                      "right_operand": "false"
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G18M0G08RJ8d9VXvDyiIKz2Myu$",
                      "operator": "lte",
                      "right_operand": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.input.variable_workflow_02JGIZBI2FLKX1KD8EZiNO9O8YDDzv1t8i0$"
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "If l_loop_end == False OR l_iteration_num = l_maximum_iterations",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA",
                    "name": "OpenAI Chat Completion",
                    "title": "OpenAI Chat Completion",
                    "type": "workflow.sub_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Executes a REST API call to /chat/completions",
                      "display_name": "OpenAI Chat Completion",
                      "input": {
                        "variable_workflow_02DCPFF9V1FW04KATEfsyPF6ieCB6arYreD": "gpt-4o",
                        "variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                        "variable_workflow_02DCPGTLVZGAS7aR4bIIOVtW8NIun8YbFmR": "0.9",
                        "variable_workflow_02DCPKDU1XY3B2TGa0NL8Pv0Q5A8tkVXdKF": "$activity.definition_activity_02JGIZCB2P1UB4cRIdY84vXCR7DXSIwTJCd.output.variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK$",
                        "variable_workflow_02DCPLMRWZQT71EMCd4SD9wzijc97Pw3NlN": "{ \"type\": \"text\" }",
                        "variable_workflow_02DCWAP5RWCYV3GWvXD2cTbSUsIB0Hwr6WW": true,
                        "variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA": "$global.variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN.global.variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN$",
                        "variable_workflow_02EBOQW9VRT3V62DGLqVA5MOU0EmGWLJQaR": "CL - AzureOpenAI",
                        "variable_workflow_02IEXBSZFSRB14jR70ReVz2WzBtJxmSbkxi": true,
                        "variable_workflow_02IEXCLNKZUJI6kajAKTbDJRu8TytdmrEsz": "2024-06-01",
                        "variable_workflow_02IEY9PBBBBRF05hd2yNZsJB9H0CSyedaHB": "smith.langchain.com",
                        "variable_workflow_02IEYALTTZR886ndklqTQICycspxKv9AyxA": true,
                        "variable_workflow_02IEYGXF873MZ76aUfDWXlgOyhqE2qc3maP": "$activity.definition_activity_02JGIZC7MKVGC0ayRWtoRGLhU6pABRpjLTX.output.script_queries.langsmith_parent_run_id$",
                        "variable_workflow_02IEZHXFWMY5H565f3U7pa0ZgDvB4De5qPO": "",
                        "variable_workflow_02IFUU2UIQ5955JfYiYwzbinafcEvShf9op": "$activity.definition_activity_02JGIZC7MKVGC0ayRWtoRGLhU6pABRpjLTX.output.script_queries.langsmith_run_name$",
                        "variable_workflow_02IFVKEO1UL5F6PoxdQwoiOSpoYoAjAIGuV": "*****",
                        "variable_workflow_02IGIKNUC3K4J3pJhV1NRbJ6aXPXYiWo1hA": "Cognitive Operations"
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "execute_on_this_target_group": true,
                        "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY"
                      },
                      "workflow_id": "definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk",
                      "workflow_name": "OpenAI Chat Completion"
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02JGIZCIE2E1U6znSCkFrO8exPiu9nb4Quz",
                    "name": "Execute Python Script",
                    "title": "Selectively Trim Message History",
                    "type": "python3.script",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "This script is put into place to selectively trim out messages in the history to reduce input token size on API  requests\n\nInputs\n   - Token limit when truncations occurs\n   - Maximum tokens for processed tool output\n   - messages",
                      "display_name": "Selectively Trim Message History",
                      "script": "\"\"\"\nMessages Selective Trimmer\n\nThis python script is developed to trim down the size of the messages array.\n\nCurrent features:\n -  Remove tool output from array IF the total size of messages is above the number of\n    tokens specified by max_processed_tool_tokens AND the size of the tool output is \n    bigger than max_processed_tool_tokens AND an assistant message follows the tool output\n    indicating the output has already been processed \n\n\nv1 - Initial pass which will trim tool long tool process tool outputs\n\"\"\"\n\nimport json\nimport re\nimport sys\n\n\ndef tokenize(text):\n    # Regular expression pattern for word tokenization\n    # This pattern will:\n    # - Correctly separate punctuation (except for periods within numbers)\n    # - Keep contractions together\n    # - Keep decimal numbers together\n    # - Keep percentages together\n    # - Separate punctuation at the end of sentences\n    token_pattern = r\"(?:\\d+\\.\\d+%?)|(?:\\w+'\\w+)|(?:\\w+)|(?:[^\\w\\s])\"\n    \n    # Find all matches of the token pattern in the text\n    tokens = re.findall(token_pattern, text)\n    return tokens\n\ndef count_tokens(text):\n    \"\"\"\n    An imperfect tokenizer that handles punctuation, percentages, decimals, contractions, and special characters. This\n    counter can be 20% lower then the true token count.\n    \n    :param text: The input string of text.\n    :return: The number of tokens in the text.\n    \"\"\"\n    tokens = tokenize(text)\n    # Return the number of tokens found\n    return len(tokens)\n\ndef truncate_to_token_limit(text, token_limit):\n    tokens = tokenize(text)\n    return ' '.join(tokens[:token_limit])\n\ndef selectively_trim_tool_messages(messages, max_processed_tool_tokens):\n    \"\"\"\n    This function goes through the messages list and will truncate a message of role=tool if there is an assistant\n    message after which would indicate the assistant has already taken action on the output.  The message will be truncated\n    down to the max_processed_tool_tokens size\n    \n    :param list: list of messages\n    :param int: maximum tokens for tool output which has already been procssed \n    :return: truncated list of messages\n    \"\"\"\n    # Iterate over the messages in reverse order to check if there is an assistant message after the tool message\n\n    # List to keep track of indices of tool messages that are candidates for trimming\n    tool_indices = []\n    \n    # Iterate over the messages to find sequences of tool messages\n    for i, message in enumerate(messages):\n        if message[\"role\"] == \"tool\" and count_tokens(message[\"content\"]) \u003e max_processed_tool_tokens:\n            # Add index of tool message to list\n            tool_indices.append(i)\n        elif message[\"role\"] == \"assistant\" and tool_indices:\n            # We have found an assistant message after a sequence of tool messages\n            # Now we can trim the content of the tool messages\n            for tool_index in tool_indices:\n                truncated_content = truncate_to_token_limit(messages[tool_index][\"content\"], max_processed_tool_tokens)\n                messages[tool_index][\"content\"] =  truncated_content + \"\\n\\n\u003c\u003c\u003c\u003c Processed tool output trimmed due to excessive length to reduce prompt tokens. \" + \\\n                                                   \"If complete output required, rerun tool, then summarize output in following message \u003e\u003e\u003e\u003e\"\n            # Clear the list of tool message indices since we've handled this sequence\n            tool_indices = []\n        elif message[\"role\"] != \"tool\":\n            # If we encounter a non-tool message that is not an assistant message,\n            # we clear the tool_indices as there is no assistant message afterwards\n            tool_indices = []\n\n    return messages\n\nmessages_token_limit = int(sys.argv[1])\nmax_processed_tool_tokens = int(sys.argv[2])\nmessages = sys.argv[3]\n\n\n# Check if messages token size is \u003e messages_token_limit, if so perform trimming\nif count_tokens(messages) \u003e messages_token_limit:\n    print('here')\n    # Load the messages from the JSON string\n    messages = json.loads(messages, strict=False)\n\n    # Selectively trim the messages based on the defined criteria\n    trimmed_messages = selectively_trim_tool_messages(messages, max_processed_tool_tokens)\n\n    # Convert the trimmed messages back to JSON\n    messages = json.dumps(trimmed_messages)",
                      "script_arguments": [
                        "4000",
                        "500",
                        "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DCPN2FUT0KQ6n4jufZaE0ssnsWAoPXR5V$"
                      ],
                      "script_queries": [
                        {
                          "script_query": "messages",
                          "script_query_name": "messages",
                          "script_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02JGIZCJVX1ZN19TEXpx85dYLBau0mRIfzK",
                    "name": "Set Variables",
                    "title": "Update l_messages variable",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Updates the l_messages variable (chat history)",
                      "display_name": "Update l_messages variable",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                          "variable_value_new": "$activity.definition_activity_02JGIZCIE2E1U6znSCkFrO8exPiu9nb4Quz.output.script_queries.messages$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02JGIZCL9NJDV723es9qXGS2ekOrLeMGxtI",
                    "name": "Condition Block",
                    "title": "Process AI Response",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Process AI Response",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02JGIZCMI6789052QWMZrydhXhWUeuwCNX7",
                        "name": "Condition Branch",
                        "title": "Response Calls Tool",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFGKNLMAM71HyjMMILdjCi0ZAd7aScKf$",
                            "operator": "ne",
                            "right_operand": "\"[]\""
                          },
                          "continue_on_failure": false,
                          "display_name": "Response Calls Tool",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02JGIZCO91MB11lk1g3VIo83hwzg3sf7drl",
                            "name": "Read Table from JSON",
                            "title": "Read Table from JSON",
                            "type": "corejava.read_table_from_json",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Read Table from JSON",
                              "input_json": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DCPMAP4B9XD4FH9ngx5kjgjV2QG1NlpcM$",
                              "jsonpath_query": "$.choices[0].message.tool_calls.*",
                              "persist_output": false,
                              "populate_columns": false,
                              "skip_execution": false,
                              "table_columns": [
                                {
                                  "column_name": "id",
                                  "column_type": "string"
                                },
                                {
                                  "column_name": "function",
                                  "column_type": "string"
                                },
                                {
                                  "column_name": "type",
                                  "column_type": "string"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02JGIZCQ3KJ931WcxjfRhuSWrWjud9yH73w",
                            "name": "Condition Block",
                            "title": "Condition Block",
                            "type": "logic.if_else",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Condition Block",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "blocks": [
                              {
                                "unique_name": "definition_activity_02JGIZCRBF2NZ2PwLtma0e5Eiu3e3ddNazM",
                                "name": "Condition Branch",
                                "title": "There is Message Content",
                                "type": "logic.condition_block",
                                "base_type": "activity",
                                "properties": {
                                  "condition": {
                                    "left_operand": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$",
                                    "operator": "mregex",
                                    "right_operand": "....*"
                                  },
                                  "continue_on_failure": false,
                                  "description": "Handles the case where the LLM puts initial plan as message instead of using XDR update tool",
                                  "display_name": "There is Message Content",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02JGIZCVTR5IN5291isODytLz78CGOscxGe",
                            "name": "For Each",
                            "title": "For Each Tool Called",
                            "type": "logic.for_each",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "For Each Tool Called",
                              "skip_execution": false,
                              "source_array": "$activity.definition_activity_02JGIZCO91MB11lk1g3VIo83hwzg3sf7drl.output.read_table_from_json$"
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02JGIZCY34HTL05KcFtnz4lE2CpaQ4EoVSS",
                                "name": "Execute Python Script",
                                "title": "Process Tool Call JSON",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "display_name": "Process Tool Call JSON",
                                  "script": "import json\nimport sys\n\n# The first argument is the script name, and the second is tool_call_id\ntool_call_id = sys.argv[1]\nchat_completion_json = sys.argv[2]\n\n# Parse the JSON data\ndata = json.loads(chat_completion_json)\n\n# Based on the tool_call_id, get the tool_call from the array tool_calls\ntool_calls = data[\"choices\"][0][\"message\"][\"tool_calls\"]\ntool_call = next((call for call in tool_calls if call[\"id\"] == tool_call_id), None)\n\nif tool_call:\n    # Create var tool_name which is the function name\n    o_wf_id = tool_call[\"function\"][\"name\"]\n    \n    # Create var arguments which is the inputs to the function.\n    # Remove '\\n' or '\\' from this\n    arguments_raw = tool_call[\"function\"][\"arguments\"]\n    # arguments = arguments_raw.replace(\"\\n\", \"\").replace(\"\\\\\", \"\")\n    o_wf_inputs = json.dumps(json.loads(arguments_raw))\n    \n    # Special hack for issue https://community.openai.com/t/model-tries-to-call-unknown-function-multi-tool-use-parallel/490653\n    if 'parallel' in o_wf_id:\n        func_args = json.loads(arguments_raw)\n        o_wf_id = func_args['tool_uses'][0]['recipient_name'].split('.')[1]\n        o_wf_inputs = json.dumps(func_args['tool_uses'][0]['parameters'])\n    \n\n    # Output the results\n    print(\"Tool Name:\", o_wf_id)\n    print(\"Arguments:\", o_wf_inputs)\n \n\n\n\nelse:\n    print(\"Tool call with the given id not found.\")",
                                  "script_arguments": [
                                    "$activity.definition_activity_02JGIZCVTR5IN5291isODytLz78CGOscxGe.input.source_array[@].id$",
                                    "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DCPMAP4B9XD4FH9ngx5kjgjV2QG1NlpcM$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "o_wf_inputs",
                                      "script_query_name": "o_wf_inputs",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "o_wf_id",
                                      "script_query_name": "o_wf_id",
                                      "script_query_type": "string"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02JGIZCZL2AR63V5zBnhflLnutDPSpVCla1",
                                "name": "Group",
                                "title": "Run Tool Workflow",
                                "type": "logic.group",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "description": "Validate that there is valid input params and function name",
                                  "display_name": "Run Tool Workflow",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "actions": [
                                  {
                                    "unique_name": "definition_activity_02JGIZD1F851I17YKRJ6ca6Wummjx3A3lyp",
                                    "name": "Execute Python Script",
                                    "title": "Validate Tool Call",
                                    "type": "python3.script",
                                    "base_type": "activity",
                                    "properties": {
                                      "action_timeout": 180,
                                      "continue_on_failure": true,
                                      "description": "Checks if tool call is doing the following:\n1. Calling a valid function name\n2. Using input params related to that function name\n3. Input params are not null\n4. Required params are sent",
                                      "display_name": "Validate Tool Call",
                                      "script": "import json\nimport sys\n\ndef validate_function_inputs(input_function_name, input_function_inputs_json, function_json):\n    # Initialize variables\n    valid = True\n    error_reason = ''\n    # Load function JSON data\n    try:\n        functions = json.loads(function_json,  strict=False)\n    except json.JSONDecodeError:\n        valid = False\n        error_reason += 'Tool JSON is not valid!\\n'\n        return valid, error_reason\n\n    # Load input JSON data\n    try:\n        input_function_inputs = json.loads(input_function_inputs_json, strict=False)\n    except json.JSONDecodeError:\n        valid = False\n        error_reason += 'Input parameters are not valid JSON!\\n'\n        return valid, error_reason\n\n    # Check if input_function_inputs_json is not null\n    if not input_function_inputs or 'null' in input_function_inputs:\n        valid = False\n        error_reason += 'Input parameters cannot be null!\\n'\n        return valid, error_reason\n\n    # Find the function by name\n    function_definition = next(\n        (func['function'] for func in functions if func['function']['name'] == input_function_name), None)\n    \n    # Check if function is found\n    if not function_definition:\n        valid = False\n        error_reason += f'Function {input_function_name} not found in available tools / functions. Ensure you are using the correct function name!\\n'\n        return valid, error_reason\n\n    # Check required parameters\n    required_params = function_definition.get('required', [])\n    properties = function_definition['parameters']['properties']\n\n    for param in required_params:\n        if param not in input_function_inputs:\n            valid = False\n            error_reason += f'Required parameter {param} is missing in input parameters!\\n'\n\n    # Check for unexpected parameters\n    for param in input_function_inputs:\n        if param not in properties:\n            valid = False\n            error_reason += f'Unexpected parameter \"{param}\" provided in input parameters. \\n\\n' \\\n                            f'Make sure you are using the right tool!  Description for called function name: \"{function_definition[\"description\"]}\"\\n'\n\n\n    # At this point, everything is valid\n    return valid, error_reason\n\n# Example usage\ninput_function_name = sys.argv[1]\ninput_function_inputs_json = sys.argv[2]\nfunction_json = sys.argv[3]\n\n# Perform validation\nis_valid, reason = validate_function_inputs(input_function_name, input_function_inputs_json, function_json)\nif not is_valid:\n    reason = 'Unable to call tool due to validation error!\\n' + reason\n    print(reason)",
                                      "script_arguments": [
                                        "$activity.definition_activity_02JGIZCY34HTL05KcFtnz4lE2CpaQ4EoVSS.output.script_queries.o_wf_id$",
                                        "$activity.definition_activity_02JGIZCY34HTL05KcFtnz4lE2CpaQ4EoVSS.output.script_queries.o_wf_inputs$",
                                        "$activity.definition_activity_02JGIZCB2P1UB4cRIdY84vXCR7DXSIwTJCd.output.variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK$"
                                      ],
                                      "script_queries": [
                                        {
                                          "script_query": "is_valid",
                                          "script_query_name": "is_valid",
                                          "script_query_type": "boolean"
                                        },
                                        {
                                          "script_query": "reason",
                                          "script_query_name": "reason",
                                          "script_query_type": "string"
                                        }
                                      ],
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity"
                                  },
                                  {
                                    "unique_name": "definition_activity_02JGIZD32M5167bSTBrPs2pACPgpE5MoHYU",
                                    "name": "Condition Block",
                                    "title": "Validate Tool Call And Execute",
                                    "type": "logic.if_else",
                                    "base_type": "activity",
                                    "properties": {
                                      "continue_on_failure": false,
                                      "display_name": "Validate Tool Call And Execute",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "blocks": [
                                      {
                                        "unique_name": "definition_activity_02JGIZD49HYKV1mRM8SuYPsNd2cfamebbKW",
                                        "name": "Condition Branch",
                                        "title": "is_valid==false",
                                        "type": "logic.condition_block",
                                        "base_type": "activity",
                                        "properties": {
                                          "condition": {
                                            "left_operand": "$activity.definition_activity_02JGIZD1F851I17YKRJ6ca6Wummjx3A3lyp.output.script_queries.is_valid$",
                                            "operator": "eq",
                                            "right_operand": false
                                          },
                                          "continue_on_failure": false,
                                          "display_name": "is_valid==false",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity",
                                        "actions": [
                                          {
                                            "unique_name": "definition_activity_02JGIZD5URZ547ZVK2dbHPYLX9wyKPwChiU",
                                            "name": "Execute Python Script",
                                            "title": "Add Error to Messages Array",
                                            "type": "python3.script",
                                            "base_type": "activity",
                                            "properties": {
                                              "action_timeout": 180,
                                              "continue_on_failure": true,
                                              "description": "Add error the function name is invalid",
                                              "display_name": "Add Error to Messages Array",
                                              "script": "import json\nimport sys\nimport re\n\ntool_id = sys.argv[1]\nl_messages = sys.argv[2]\nl_messages = json.loads(l_messages)\nmessage_content = sys.argv[3]\n\n# Fix for known issue with OAI gpt4\n# multi_tool_use.parallel' does not match '^[a-zA-Z0-9_-]{1,64}$' \n# - 'messages.5.tool_calls.0.function.name'\ndef remove_invalid_tool_names(data):\n    # Iterate through the list of dictionaries\n    pattern = r'^[a-zA-Z0-9_-]{1,64}$'\n    for entry in data:\n        # Check if 'tool_calls' key is in the dictionary\n        if 'tool_calls' in entry:\n            # Iterate through the list of tool calls\n            for tool_call in entry['tool_calls']:\n                # Check if the function name does not match the regex pattern\n                if not re.match(pattern, tool_call['function']['name']):\n                    # Replace the function name with 'invalid_tool_name'\n                    tool_call['function']['name'] = 'invalid_tool_name'\n    return data\nl_messages = remove_invalid_tool_names(l_messages)\n\noutput = {'role': 'tool',\n          'tool_call_id': tool_id,\n          'content': message_content}\n\nl_messages.append(output)\nl_messages = json.dumps(l_messages)",
                                              "script_arguments": [
                                                "$activity.definition_activity_02JGIZCVTR5IN5291isODytLz78CGOscxGe.input.source_array[@].id$",
                                                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                                                "$activity.definition_activity_02JGIZD1F851I17YKRJ6ca6Wummjx3A3lyp.output.script_queries.reason$"
                                              ],
                                              "script_queries": [
                                                {
                                                  "script_query": "l_messages",
                                                  "script_query_name": "l_messages",
                                                  "script_query_type": "string"
                                                }
                                              ],
                                              "skip_execution": false
                                            },
                                            "object_type": "definition_activity"
                                          },
                                          {
                                            "unique_name": "definition_activity_02JGIZD7KKFB13DHTx1QAnT0TQslrPJEQKL",
                                            "name": "Set Variables",
                                            "title": "Update l_messages variable",
                                            "type": "core.set_multiple_variables",
                                            "base_type": "activity",
                                            "properties": {
                                              "continue_on_failure": true,
                                              "description": "Updates the l_messages variable (chat history)",
                                              "display_name": "Update l_messages variable",
                                              "skip_execution": false,
                                              "variables_to_update": [
                                                {
                                                  "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                                                  "variable_value_new": "$activity.definition_activity_02JGIZD5URZ547ZVK2dbHPYLX9wyKPwChiU.output.script_queries.l_messages$"
                                                }
                                              ]
                                            },
                                            "object_type": "definition_activity"
                                          },
                                          {
                                            "unique_name": "definition_activity_02JGIZD98BTTY6yXuQh1yVpg3wuvbm9lr0L",
                                            "name": "Continue",
                                            "title": "Continue",
                                            "type": "logic.continue",
                                            "base_type": "activity",
                                            "properties": {
                                              "continue_on_failure": false,
                                              "display_name": "Continue",
                                              "skip_execution": false
                                            },
                                            "object_type": "definition_activity"
                                          }
                                        ]
                                      },
                                      {
                                        "unique_name": "definition_activity_02JGIZDADRW3Z4ojGIN79ZSdrxmjYCKYjkl",
                                        "name": "Condition Branch",
                                        "title": "is_valid==true",
                                        "type": "logic.condition_block",
                                        "base_type": "activity",
                                        "properties": {
                                          "condition": {
                                            "left_operand": "$activity.definition_activity_02JGIZD1F851I17YKRJ6ca6Wummjx3A3lyp.output.script_queries.is_valid$",
                                            "operator": "eq",
                                            "right_operand": true
                                          },
                                          "continue_on_failure": false,
                                          "display_name": "is_valid==true",
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity",
                                        "actions": [
                                          {
                                            "unique_name": "definition_activity_02JGIZDCPNJI12Isit2tZ7CAgdHEGQK3Vn7",
                                            "name": "Execute Tool Workflow and Waits For Completion",
                                            "title": "Execute Tool Workflow and Waits For Completion",
                                            "type": "workflow.sub_workflow",
                                            "base_type": "subworkflow",
                                            "properties": {
                                              "continue_on_failure": true,
                                              "display_name": "Execute Tool Workflow and Waits For Completion",
                                              "input": {
                                                "variable_workflow_02DDLT1TG2MM8658HoJjmqvbxyKyHAZiKlt": "$activity.definition_activity_02JGIZCY34HTL05KcFtnz4lE2CpaQ4EoVSS.output.script_queries.o_wf_id$",
                                                "variable_workflow_02DDLTMMGC9GV6vAV5A2jLq5jWLJUQ57wh1": "$activity.definition_activity_02JGIZCY34HTL05KcFtnz4lE2CpaQ4EoVSS.output.script_queries.o_wf_inputs$"
                                              },
                                              "runtime_user": {
                                                "target_default": true
                                              },
                                              "skip_execution": false,
                                              "target": {
                                                "execute_on_this_target_group": true,
                                                "target_group_id": "target_group_01HLKTH50I3ZU5IfL3dwQos38eRFcE5gYjM"
                                              },
                                              "workflow_id": "definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4",
                                              "workflow_name": "Execute Tool Workflow and Waits For Completion"
                                            },
                                            "object_type": "definition_activity"
                                          },
                                          {
                                            "unique_name": "definition_activity_02JGIZDENP8AP0NQsnOBrWoRWCH83NO8Eml",
                                            "name": "Condition Block",
                                            "title": "Handle Tool Workflow Start Failure",
                                            "type": "logic.if_else",
                                            "base_type": "activity",
                                            "properties": {
                                              "continue_on_failure": false,
                                              "description": "Handles if the tool workflow was in failed state",
                                              "display_name": "Handle Tool Workflow Start Failure",
                                              "skip_execution": false
                                            },
                                            "object_type": "definition_activity",
                                            "blocks": [
                                              {
                                                "unique_name": "definition_activity_02JGIZDFTM4YF48p4cHNV3TSXcQDHJ2Hpo3",
                                                "name": "Condition Branch",
                                                "title": "If tool workflow failed",
                                                "type": "logic.condition_block",
                                                "base_type": "activity",
                                                "properties": {
                                                  "condition": {
                                                    "left_operand": "$activity.definition_activity_02JGIZDCPNJI12Isit2tZ7CAgdHEGQK3Vn7.output.succeeded$",
                                                    "operator": "eq",
                                                    "right_operand": false
                                                  },
                                                  "continue_on_failure": false,
                                                  "display_name": "If tool workflow failed",
                                                  "skip_execution": false
                                                },
                                                "object_type": "definition_activity",
                                                "actions": [
                                                  {
                                                    "unique_name": "definition_activity_02JGIZDHFR7ZO04zYAztyRfBZwoHkvrz54A",
                                                    "name": "Execute Python Script",
                                                    "title": "Adds Error to Messages Array",
                                                    "type": "python3.script",
                                                    "base_type": "activity",
                                                    "properties": {
                                                      "action_timeout": 180,
                                                      "continue_on_failure": false,
                                                      "description": "Adds Error to the Messages array for the chat history",
                                                      "display_name": "Adds Error to Messages Array",
                                                      "script": "import json\nimport sys\n\nerror_msg = sys.argv[1]\nmessage_content = f'ERROR: Tool failed. Message: {error_msg}'\ntool_id = sys.argv[2]\nl_messages = sys.argv[3]\n\noutput = {'role': 'tool',\n          'tool_call_id': tool_id,\n          'content': message_content}\n\n\nl_messages = json.loads(l_messages)\nl_messages.append(output)\nl_messages = json.dumps(l_messages)",
                                                      "script_arguments": [
                                                        "$activity.definition_activity_02JGIZDCPNJI12Isit2tZ7CAgdHEGQK3Vn7.output.error.message$",
                                                        "$activity.definition_activity_02JGIZCVTR5IN5291isODytLz78CGOscxGe.input.source_array[@].id$",
                                                        "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$"
                                                      ],
                                                      "script_queries": [
                                                        {
                                                          "script_query": "l_messages",
                                                          "script_query_name": "l_messages",
                                                          "script_query_type": "string"
                                                        }
                                                      ],
                                                      "skip_execution": false
                                                    },
                                                    "object_type": "definition_activity"
                                                  },
                                                  {
                                                    "unique_name": "definition_activity_02JGIZDIZWZVW5N2GLGOsPW8WaYpa286MZ4",
                                                    "name": "Set Variables",
                                                    "title": "Update l_messages variable",
                                                    "type": "core.set_multiple_variables",
                                                    "base_type": "activity",
                                                    "properties": {
                                                      "continue_on_failure": false,
                                                      "description": "Updates the l_messages variable (chat history)",
                                                      "display_name": "Update l_messages variable",
                                                      "skip_execution": false,
                                                      "variables_to_update": [
                                                        {
                                                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                                                          "variable_value_new": "$activity.definition_activity_02JGIZDHFR7ZO04zYAztyRfBZwoHkvrz54A.output.script_queries.l_messages$"
                                                        }
                                                      ]
                                                    },
                                                    "object_type": "definition_activity"
                                                  },
                                                  {
                                                    "unique_name": "definition_activity_02JGIZDKH7MG43mCsNnduUC2tJd1rYufYNf",
                                                    "name": "Continue",
                                                    "title": "Continue",
                                                    "type": "logic.continue",
                                                    "base_type": "activity",
                                                    "properties": {
                                                      "continue_on_failure": false,
                                                      "display_name": "Continue",
                                                      "skip_execution": false
                                                    },
                                                    "object_type": "definition_activity"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "unique_name": "definition_activity_02JGIZDLIGOZ33orM7D21csUmXbmyXOwJh6",
                                            "name": "Execute Python Script",
                                            "title": "Add Tool Response to Messages Array",
                                            "type": "python3.script",
                                            "base_type": "activity",
                                            "properties": {
                                              "action_timeout": 180,
                                              "continue_on_failure": false,
                                              "description": "Adds the tool response to the Messages array for the chat history",
                                              "display_name": "Add Tool Response to Messages Array",
                                              "script": "import json\nimport sys\n\nmessage_content = sys.argv[1]\ntool_id = sys.argv[2]\nl_messages = sys.argv[3]\n\n#if message_content.startswith('{') or message_content.startswith('['):\n#    message_content = json.loads(message_content)\n\noutput = {'role': 'tool',\n          'tool_call_id': tool_id,\n          'content': message_content}\n\n\nl_messages = json.loads(l_messages)\nl_messages.append(output)\nl_messages = json.dumps(l_messages)",
                                              "script_arguments": [
                                                "$activity.definition_activity_02JGIZDCPNJI12Isit2tZ7CAgdHEGQK3Vn7.output.variable_workflow_02DCZ17G5QHI44uutRtYxa5oiOQeBx9BVRD$",
                                                "$activity.definition_activity_02JGIZCVTR5IN5291isODytLz78CGOscxGe.input.source_array[@].id$",
                                                "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$"
                                              ],
                                              "script_queries": [
                                                {
                                                  "script_query": "l_messages",
                                                  "script_query_name": "l_messages",
                                                  "script_query_type": "string"
                                                }
                                              ],
                                              "skip_execution": false
                                            },
                                            "object_type": "definition_activity"
                                          },
                                          {
                                            "unique_name": "definition_activity_02JGIZDN4Y2KI6N7V2wwDC8uyfxiWTqdTQg",
                                            "name": "Set Variables",
                                            "title": "Update l_messages variable",
                                            "type": "core.set_multiple_variables",
                                            "base_type": "activity",
                                            "properties": {
                                              "continue_on_failure": false,
                                              "description": "Updates the l_messages variable (chat history)",
                                              "display_name": "Update l_messages variable",
                                              "skip_execution": false,
                                              "variables_to_update": [
                                                {
                                                  "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$",
                                                  "variable_value_new": "$activity.definition_activity_02JGIZDLIGOZ33orM7D21csUmXbmyXOwJh6.output.script_queries.l_messages$"
                                                }
                                              ]
                                            },
                                            "object_type": "definition_activity"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02JGIZDOHID1Z5kvynwoKedLJEjAJTfgoQI",
                            "name": "Condition Block",
                            "title": "If INC Update is Final Response",
                            "type": "logic.if_else",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "If INC Update is Final Response",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "blocks": [
                              {
                                "unique_name": "definition_activity_02JGIZDPPCTIH0drtolNY68f6nRRyCrzktM",
                                "name": "Condition Branch",
                                "title": "Condition Branch",
                                "type": "logic.condition_block",
                                "base_type": "activity",
                                "properties": {
                                  "condition": {
                                    "left_operand": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFGKNLMAM71HyjMMILdjCi0ZAd7aScKf$",
                                    "operator": "mregex",
                                    "right_operand": "{{FINAL_ANSWER}}"
                                  },
                                  "continue_on_failure": false,
                                  "display_name": "Condition Branch",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "actions": [
                                  {
                                    "unique_name": "definition_activity_02JGIZDRHLPSW2sAhYxgZdwBw81oxL5GjhK",
                                    "name": "Set Variables",
                                    "title": "Set Variables",
                                    "type": "core.set_multiple_variables",
                                    "base_type": "activity",
                                    "properties": {
                                      "continue_on_failure": false,
                                      "display_name": "Set Variables",
                                      "skip_execution": false,
                                      "variables_to_update": [
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G7TZ0Wgjmo13m2RJS5PlyUg0UF$",
                                          "variable_value_new": "true"
                                        },
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.output.variable_workflow_02JGIZBI2GEHG6qbCJBPwc0RqVXn6uATeYx$",
                                          "variable_value_new": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$"
                                        }
                                      ]
                                    },
                                    "object_type": "definition_activity"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02JGIZDT7VOTM77BIMg4aq0IuzO5TftKSAx",
                        "name": "Condition Branch",
                        "title": "Response Contains Message",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$",
                            "operator": "mregex",
                            "right_operand": ".+"
                          },
                          "continue_on_failure": false,
                          "display_name": "Response Contains Message",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02JGIZDUW89M80XF5Oiqx85PIaY33hn4EJ4",
                            "name": "Condition Block",
                            "title": "Process Message",
                            "type": "logic.if_else",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Process Message",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "blocks": [
                              {
                                "unique_name": "definition_activity_02JGIZDW7CBK1773DF6mlBkTCjOtk1b3X3J",
                                "name": "Condition Branch",
                                "title": "Message Contains Final Response",
                                "type": "logic.condition_block",
                                "base_type": "activity",
                                "properties": {
                                  "condition": {
                                    "left_operand": {
                                      "left_operand": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$",
                                      "operator": "mregex",
                                      "right_operand": ".*"
                                    },
                                    "operator": "and",
                                    "right_operand": {
                                      "left_operand": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G18M0G08RJ8d9VXvDyiIKz2Myu$",
                                      "operator": "ne",
                                      "right_operand": 1
                                    }
                                  },
                                  "continue_on_failure": false,
                                  "display_name": "Message Contains Final Response",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "actions": [
                                  {
                                    "unique_name": "definition_activity_02JGIZDY2QU8V3JDCtgEJVDqyCk8K4BKnbJ",
                                    "name": "Set Variables",
                                    "title": "Set Variables",
                                    "type": "core.set_multiple_variables",
                                    "base_type": "activity",
                                    "properties": {
                                      "continue_on_failure": false,
                                      "display_name": "Set Variables",
                                      "skip_execution": false,
                                      "variables_to_update": [
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G7TZ0Wgjmo13m2RJS5PlyUg0UF$",
                                          "variable_value_new": "true"
                                        },
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.output.variable_workflow_02JGIZBI2GEHG6qbCJBPwc0RqVXn6uATeYx$",
                                          "variable_value_new": "$activity.definition_activity_02JGIZCG4HISY7hGDc518oFZ1mS6sBFqcmA.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$"
                                        },
                                        {
                                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.output.variable_workflow_02K1OU6XML3VV3V4xRCxRTQBhwGD593gZLX$",
                                          "variable_value_new": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2E46C3g8x8LspP0OOD9mM7HAzzx$"
                                        }
                                      ]
                                    },
                                    "object_type": "definition_activity"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02JGIZE1VVVKS184qfnwZNImFVvrq8yOnam",
                    "name": "Set Variables",
                    "title": "Increase Iteration count",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Increase Iteration count",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G18M0G08RJ8d9VXvDyiIKz2Myu$",
                          "variable_value_new": "$workflow.definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI.local.variable_workflow_02JGIZBI2G18M0G08RJ8d9VXvDyiIKz2Myu$ + 1"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85",
          "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M"
        ]
      },
      "subworkflows": [
        {
          "workflow": {
            "unique_name": "definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6",
            "name": "Convert XDR Automation Workflows to OpenAI Tools",
            "title": "Convert XDR Automation Workflows to OpenAI Tools",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_function_format",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "\"CLUS\"",
                  "scope": "input",
                  "name": "i_categories",
                  "type": "datatype.string",
                  "description": "Comma separated, quoted list of category names to search for. Example: \"AI_Tool\", \"AI\"",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCX3X6TE2FC0CWVORoFxv6xZJd7RMOkA7",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "Lookup tool workflows grouped by category and convert their metadata into OpenAI tool function calls.",
              "display_name": "Convert XDR Automation Workflows to OpenAI Tools",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "no_target": true
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02DCWW1YF76VQ6RO6Em3Kbge6SUiolKH9qq",
                "name": "HTTP Request",
                "title": "Get Workflows by Category",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "accept": "application/json",
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "body": "{\n  \"categories\": [\n    $workflow.definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6.input.variable_workflow_02DCX3X6TE2FC0CWVORoFxv6xZJd7RMOkA7$\n  ],\n  \"owner\": []\n}",
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "description": "Given an input category, get all XDR Automate workflows tagged with that category.",
                  "display_name": "Get Workflows by Category",
                  "method": "POST",
                  "relative_url": "/api/v1.1/workflows?is_atomic=false\u0026start=0\u0026limit=48\u0026sort_by=updated_on",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": true,
                    "target_id": "$module_target;Cisco XDR;securex:ao:sxo;automation-apis$"
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DD3SCDTQBIH4tNk3AqmO5z6tMPWq7aKr4",
                "name": "Group",
                "title": "Parse out Workflow IDs",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Parse out Workflow IDs",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DD004OQE9PK6lLOMIe1iv6I2ybfG3i0ji",
                    "name": "JSONPath Query",
                    "title": "JSONPath IDs",
                    "type": "corejava.jsonpathquery",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "display_name": "JSONPath IDs",
                      "input_json": "$activity.definition_activity_02DCWW1YF76VQ6RO6Em3Kbge6SUiolKH9qq.output.response_body$",
                      "jsonpath_queries": [
                        {
                          "jsonpath_query": "$..id",
                          "jsonpath_query_name": "wf_ids",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DD3QZK2LTGT6O1uJ30bfvZ8EYTEjCsAlz",
                    "name": "Match Regex",
                    "title": "IDs as Strings",
                    "type": "core.matchregex",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "display_name": "IDs as Strings",
                      "input_regex": "\"?\\b([a-zA-Z0-9]+)\\b\"?",
                      "input_string": "$activity.definition_activity_02DD004OQE9PK6lLOMIe1iv6I2ybfG3i0ji.output.jsonpath_queries.wf_ids$",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02DD0EJOBFQ5K331tLC5XAIsRpBuMlujH0y",
                "name": "For Each",
                "title": "For Each WF",
                "type": "logic.for_each",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "For Each WF",
                  "skip_execution": false,
                  "source_array": "$activity.definition_activity_02DD3QZK2LTGT6O1uJ30bfvZ8EYTEjCsAlz.output.matching_strings$"
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DD4CR7NDXXC3LmLwMaSKbAl8jNWlGPBpq",
                    "name": "Replace String",
                    "title": "Remove quotes from IDs",
                    "type": "core.replacestring",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "display_name": "Remove quotes from IDs",
                      "input_string": "$activity.definition_activity_02DD0EJOBFQ5K331tLC5XAIsRpBuMlujH0y.input.source_array[@]$",
                      "replace_list": [
                        {
                          "replaced_string": "\"",
                          "replacement_string": ""
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DDMKZF2ZJV834VpC8Uk8AaaY4ozO9sUXI",
                    "name": "HTTP Request",
                    "title": "Get Workflow by Workflow ID",
                    "type": "web-service.http_request",
                    "base_type": "activity",
                    "properties": {
                      "accept": "application/json",
                      "action_timeout": 180,
                      "allow_auto_redirect": true,
                      "allow_headers_redirect": false,
                      "content_type": "application/json",
                      "continue_on_error_status_code": false,
                      "continue_on_failure": false,
                      "display_name": "Get Workflow by Workflow ID",
                      "method": "GET",
                      "relative_url": "/api/v1/workflows/$activity.definition_activity_02DD4CR7NDXXC3LmLwMaSKbAl8jNWlGPBpq.output.result_string$",
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "override_workflow_target": true,
                        "target_id": "$module_target;Cisco XDR;securex:ao:sxo;automation-apis$"
                      }
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DDLW8K3S63X2Q5EVahuJBE30RUWpzRiHJ",
                    "name": "JSONPath Query",
                    "title": "Parse WF name, ID, description \u0026 variables",
                    "type": "corejava.jsonpathquery",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": true,
                      "display_name": "Parse WF name, ID, description \u0026 variables",
                      "input_json": "$activity.definition_activity_02DDMKZF2ZJV834VpC8Uk8AaaY4ozO9sUXI.output.response_body$",
                      "jsonpath_queries": [
                        {
                          "jsonpath_query": "$.name",
                          "jsonpath_query_name": "wf_name",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        },
                        {
                          "jsonpath_query": "$.properties.description",
                          "jsonpath_query_name": "wf_description",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        },
                        {
                          "jsonpath_query": "$.variables[*]['properties']",
                          "jsonpath_query_name": "wf_variables",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        },
                        {
                          "jsonpath_query": "$.id",
                          "jsonpath_query_name": "wf_id",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DDPH559DLMO2NwJqZrcfXQVxlI6jMg11x",
                    "name": "Parallel Block",
                    "title": "Clean up Parsed Values",
                    "type": "logic.parallel",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Clean up Parsed Values",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02DDPH55PUDTV5p2zpjmytYwxkRQ1dbphTI",
                        "name": "Parallel Branch",
                        "title": "Name",
                        "type": "logic.parallel_block",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Name",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02DDPK9SCRDPO1GCPkHm119O1StzTS4Mvr7",
                            "name": "Replace String",
                            "title": "Workflow Name Ready",
                            "type": "core.replacestring",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Workflow Name Ready",
                              "input_string": "$activity.definition_activity_02DDLW8K3S63X2Q5EVahuJBE30RUWpzRiHJ.output.jsonpath_queries.wf_name$",
                              "replace_list": [
                                {
                                  "replaced_string": "\"",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "[",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "]",
                                  "replacement_string": ""
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02DEG4CIZGYN50umMM4NqToftxNmjOAgb2E",
                        "name": "Parallel Branch",
                        "title": "ID",
                        "type": "logic.parallel_block",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "ID",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02DEG4CIZHP7218P1ZSQtlnjYS1QyZZdXGW",
                            "name": "Replace String",
                            "title": "Workflow ID Ready",
                            "type": "core.replacestring",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Workflow ID Ready",
                              "input_string": "$activity.definition_activity_02DDLW8K3S63X2Q5EVahuJBE30RUWpzRiHJ.output.jsonpath_queries.wf_id$",
                              "replace_list": [
                                {
                                  "replaced_string": "\"",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "[",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "]",
                                  "replacement_string": ""
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02DDPH562J4R42T7NBzmFWQgS2smY9j0cPa",
                        "name": "Parallel Branch",
                        "title": "Description",
                        "type": "logic.parallel_block",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Description",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02DDPKCIZ0V5O1LSDCgYRAPc6gB2F3dL0Uf",
                            "name": "Replace String",
                            "title": "Workflow Description Ready",
                            "type": "core.replacestring",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Workflow Description Ready",
                              "input_string": "$activity.definition_activity_02DDLW8K3S63X2Q5EVahuJBE30RUWpzRiHJ.output.jsonpath_queries.wf_description$",
                              "replace_list": [
                                {
                                  "replaced_string": "\"",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "[",
                                  "replacement_string": ""
                                },
                                {
                                  "replaced_string": "]",
                                  "replacement_string": ""
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02DDPHGU7775M6Lcd7pIhhlsA3pHqBJFU7D",
                        "name": "Parallel Branch",
                        "title": "Variables",
                        "type": "logic.parallel_block",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Variables",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02DDUMLKBGYUH2uGzjkzVrqOpVSMvRiCnJ8",
                            "name": "Replace String",
                            "title": "Remove 'datatype' from type",
                            "type": "core.replacestring",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Remove 'datatype' from type",
                              "input_string": "$activity.definition_activity_02DDLW8K3S63X2Q5EVahuJBE30RUWpzRiHJ.output.jsonpath_queries.wf_variables$",
                              "replace_list": [
                                {
                                  "replaced_string": "datatype.",
                                  "replacement_string": ""
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02DDRY1V9HFX517HcCFW5QFl94B5ciEjrHC",
                            "name": "Execute Python Script",
                            "title": "Workflow Variables Ready",
                            "type": "python3.script",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Workflow Variables Ready",
                              "script": "import json\n\n# Assuming input_data is a JSON string at runtime\ninput_data_json = '''[$activity.definition_activity_02DDUMLKBGYUH2uGzjkzVrqOpVSMvRiCnJ8.output.result_string$]'''\n\n# Convert the JSON string to a Python object\ninput_data = json.loads(input_data_json)\n\n# The script to transform the input into the desired output structure\ndef transform_input(input_list):\n    result = {}\n    required_variables = []\n    # Assuming the outer list contains only one inner list\n    for item in input_list[0]:\n        # Skip items where the scope is not 'input' or 'output'\n        if item.get(\"scope\") not in ['input']:\n            continue\n        if item.get(\"type\") in [\"string\", \"boolean\"]:\n            key = item.get(\"name\")\n            result[key] = {\n                \"type\": item.get(\"type\"),\n                \"description\": item.get(\"description\")\n            }\n\n        # Check if is_required is true and add to the list\n            if item.get(\"is_required\", True):\n                required_variables.append(key)\n    return result, required_variables\n\n# Transforming the input\npy_wf_variables, py_reqd_variables = transform_input(input_data)\n\n# Printing the transformed output structure\nprint(json.dumps(py_wf_variables, indent=2))\n#print(\"Required variables:\", py_reqd_variables)",
                              "script_queries": [
                                {
                                  "script_query": "py_wf_variables",
                                  "script_query_name": "loop_wf_variables",
                                  "script_query_type": "string"
                                },
                                {
                                  "script_query": "py_reqd_variables",
                                  "script_query_name": "loop_reqd_variables",
                                  "script_query_type": "string"
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02DDV9W5R3H174Looqg5pqw1C8d8q0YoCby",
                            "name": "Replace String",
                            "title": "Replace ' with \" for required variables list",
                            "type": "core.replacestring",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Replace ' with \" for required variables list",
                              "input_string": "$activity.definition_activity_02DDRY1V9HFX517HcCFW5QFl94B5ciEjrHC.output.script_queries.loop_reqd_variables$",
                              "replace_list": [
                                {
                                  "replaced_string": "'",
                                  "replacement_string": "\""
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02DDLQQL1CPHV43WVG9LSXZ4bjiej1yvyrP",
                    "name": "Set Variables",
                    "title": "Append to function payload",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Append to function payload",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6.output.variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK$",
                          "variable_value_new": "$workflow.definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6.output.variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK$\n{\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"$activity.definition_activity_02DEG4CIZHP7218P1ZSQtlnjYS1QyZZdXGW.output.result_string$\",\n      \"description\": \"$activity.definition_activity_02DDPK9SCRDPO1GCPkHm119O1StzTS4Mvr7.output.result_string$ - $activity.definition_activity_02DDPKCIZ0V5O1LSDCgYRAPc6gB2F3dL0Uf.output.result_string$\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": $activity.definition_activity_02DDRY1V9HFX517HcCFW5QFl94B5ciEjrHC.output.response_body$\n      },\n         \"required\": $activity.definition_activity_02DDV9W5R3H174Looqg5pqw1C8d8q0YoCby.output.result_string$\n    }\n  },"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02DEEXOAE8LMX2spobiSUNvglZcMtePj5RH",
                "name": "Replace String",
                "title": "Replace null with \"\"",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Replace null with \"\"",
                  "input_string": "$workflow.definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6.output.variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK$",
                  "replace_list": [
                    {
                      "replaced_string": "null",
                      "replacement_string": "\"\""
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DDTHR391CRE5AUt8h6WyXyWpQu8J4MNwZ",
                "name": "Trim String",
                "title": "Clean up function payload",
                "type": "core.trim_string",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "characters_to_trim": ",",
                  "continue_on_failure": false,
                  "description": "Trim trailing comma to create valid JSON dictionary",
                  "display_name": "Clean up function payload",
                  "skip_execution": false,
                  "source": "$activity.definition_activity_02DEEXOAE8LMX2spobiSUNvglZcMtePj5RH.output.result_string$",
                  "trim_leading": false,
                  "trim_trailing": true
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DDTGW6KHVRO1F1evChapd9k2ioevxwpKc",
                "name": "Set Variables",
                "title": "Set payload as Output",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set payload as Output",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6.output.variable_workflow_02DDLT3T6CFVZ7F8CeMg6PFGPJvbsnQ3lyK$",
                      "variable_value_new": "[$activity.definition_activity_02DDTHR391CRE5AUt8h6WyXyWpQu8J4MNwZ.output.trimmed$]"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ],
            "categories": [
              "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
              "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
            ]
          }
        },
        {
          "workflow": {
            "unique_name": "definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk",
            "name": "OpenAI Chat Completion",
            "title": "OpenAI Chat Completion",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_messages",
                  "type": "datatype.string",
                  "description": "The message history which will include the i_messages and most recent response",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPN2FUT0KQ6n4jufZaE0ssnsWAoPXR5V",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 1,
                  "scope": "local",
                  "name": "l_openai_retries",
                  "type": "datatype.integer",
                  "description": "Determines the number of retry attempts made to OpenAI",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "Cognitive Operations",
                  "scope": "input",
                  "name": "i_langsmith_project_name",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02IGIKNUC3K4J3pJhV1NRbJ6aXPXYiWo1hA",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "input",
                  "name": "i_return_messages_history",
                  "type": "datatype.boolean",
                  "description": "If true, appends the messages response to i_messages for the value of o_messages",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCWAP5RWCYV3GWvXD2cTbSUsIB0Hwr6WW",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_message_content",
                  "type": "datatype.string",
                  "description": "The message content in the AI response",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "0.9",
                  "scope": "input",
                  "name": "i_temperature",
                  "type": "datatype.string",
                  "description": "What sampling temperature to use between 0 and 2",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPGTLVZGAS7aR4bIIOVtW8NIun8YbFmR",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_langsmith_run_id",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02IEYDTEEUKYX3REGflZEfrxKw7zBuir1FZ",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "i_langsmith_run_name",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02IFUU2UIQ5955JfYiYwzbinafcEvShf9op",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "i_langsmith_run_id",
                  "type": "datatype.string",
                  "description": "Langsmith run id. Must be a UUID string. If left blank, one will be created. This is useful for setting the parent run",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02IEZHXFWMY5H565f3U7pa0ZgDvB4De5qPO",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "output",
                  "name": "o_tool_calls",
                  "type": "datatype.string",
                  "description": "The tool calls from the response message",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DEFGKNLMAM71HyjMMILdjCi0ZAd7aScKf",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[]",
                  "scope": "input",
                  "name": "i_tools",
                  "type": "datatype.string",
                  "description": "A list of tools the model may call in JSON. Max of 128 tools",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPKDU1XY3B2TGa0NL8Pv0Q5A8tkVXdKF",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "input",
                  "name": "i_langsmith_parent_run_id",
                  "type": "datatype.string",
                  "description": "Parent run_id . Used for langsmith tracing",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "html"
                },
                "unique_name": "variable_workflow_02IEYGXF873MZ76aUfDWXlgOyhqE2qc3maP",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "input",
                  "name": "i_enable_langsmith_trace",
                  "type": "datatype.boolean",
                  "description": "Determines whether it should be logged to langsmith",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02IEYALTTZR886ndklqTQICycspxKv9AyxA",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "smith.langchain.com",
                  "scope": "input",
                  "name": "i_langsmith_target_name",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02IEY9PBBBBRF05hd2yNZsJB9H0CSyedaHB",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.secure_string",
                "properties": {
                  "value": "*****",
                  "scope": "input",
                  "name": "i_openai_api_token",
                  "type": "datatype.secure_string",
                  "description": "The api bearer token",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "CL - AzureOpenAI",
                  "scope": "input",
                  "name": "i_openai_http_target_name",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02EBOQW9VRT3V62DGLqVA5MOU0EmGWLJQaR",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_chat_completion",
                  "type": "datatype.string",
                  "description": "The chat completion object in json",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPMAP4B9XD4FH9ngx5kjgjV2QG1NlpcM",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_choices",
                  "type": "datatype.string",
                  "description": "The choices list from the chat completion object",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPMJFLMUOH6MSDxfYhwS5m2mMBIjsGCb",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.boolean",
                "properties": {
                  "value": true,
                  "scope": "input",
                  "name": "i_azure",
                  "type": "datatype.boolean",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02IEXBSZFSRB14jR70ReVz2WzBtJxmSbkxi",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "{ \"type\": \"text\" }",
                  "scope": "input",
                  "name": "i_response_format",
                  "type": "datatype.string",
                  "description": "Specifies the format the model must output. { \"type\": \"json_object\" } or { \"type\": \"text\" }",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPLMRWZQT71EMCd4SD9wzijc97Pw3NlN",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.secure_string",
                "properties": {
                  "value": "*****",
                  "scope": "input",
                  "name": "i_langsmith_api_key",
                  "type": "datatype.secure_string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02IFVKEO1UL5F6PoxdQwoiOSpoYoAjAIGuV",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 30,
                  "scope": "local",
                  "name": "l_seconds_between_retries",
                  "type": "datatype.integer",
                  "description": "Maximum number of seconds between retry attempts. ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02EK4JM1T6LQ11pN82CxaX1RDHOkegZzhyh",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "gpt-4o",
                  "scope": "input",
                  "name": "i_model",
                  "type": "datatype.string",
                  "description": "LLM Model to be used",
                  "is_required": false,
                  "display_on_wizard": true,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPFF9V1FW04KATEfsyPF6ieCB6arYreD",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "2024-06-01",
                  "scope": "input",
                  "name": "i_azure_api_version",
                  "type": "datatype.string",
                  "description": "The api-version used when executing with Azure",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": "text"
                },
                "unique_name": "variable_workflow_02IEXCLNKZUJI6kajAKTbDJRu8TytdmrEsz",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "[\n{\n\"role\": \"system\",\n\"content\": \"You are an AI assistant.\"\n}\n]",
                  "scope": "input",
                  "name": "i_messages",
                  "type": "datatype.string",
                  "description": "A list of messages in conversation so far as json",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "Executes a call to the OpenAI chat completion API",
              "display_name": "OpenAI Chat Completion",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "execute_on_target_group": true,
                "target_group": {
                  "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
                  "run_on_all_targets": false,
                  "selected_target_types": [
                    "web-service.endpoint"
                  ],
                  "use_criteria": {
                    "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                    "conditions": [
                      {
                        "operator": "eqi",
                        "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                        "right_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02EBOQW9VRT3V62DGLqVA5MOU0EmGWLJQaR$"
                      }
                    ]
                  }
                }
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02DCVSTR1ZEIQ2Uqo6eOKKodTJi4eaQJG5h",
                "name": "Execute Python Script",
                "title": "Build Request Body and URI",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Build Request Body and URI",
                  "script": "import sys\nimport json\n\nmodel_id = sys.argv[1]\napi_version = sys.argv[2]\nis_azure = sys.argv[3]\ntemperature = float(sys.argv[4])\ntools = json.loads(sys.argv[5])\nresponse_format = json.loads(sys.argv[6])\nmessages = json.loads(sys.argv[7])\n\nif is_azure == 'true':\n  is_azure = True\nelse:\n  is_azure = False\n\nif is_azure:\n  completions_path = f'/openai/deployments/{model_id}/chat/completions?api-version={api_version}'\n  body = {\n        \"temperature\": temperature,\n        \"stream\": False,\n        \"tools\": tools,\n        \"response_format\": response_format,\n        \"messages\": messages\n        }\nelse:\n  completions_path = '/chat/completions'\n  body = {\n        \"model\": model_id,\n        \"temperature\": temperature,\n        \"stream\": False,\n        \"tools\": tools,\n        \"response_format\": response_format,\n        \"messages\": messages\n        }\n  \njson_body = json.dumps(body)\n\n# Fix for https://github.com/microsoft/semantic-kernel/issues/4447\njson_body = json_body.replace('multi_tool_use.parallel','parallel')\n\nbody = json.loads(json_body)\n\nif not body['tools']:\n  body.pop('tools')\n\njson_body = json.dumps(body)",
                  "script_arguments": [
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPFF9V1FW04KATEfsyPF6ieCB6arYreD$",
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEXCLNKZUJI6kajAKTbDJRu8TytdmrEsz$",
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEXBSZFSRB14jR70ReVz2WzBtJxmSbkxi$",
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPGTLVZGAS7aR4bIIOVtW8NIun8YbFmR$",
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPKDU1XY3B2TGa0NL8Pv0Q5A8tkVXdKF$",
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPLMRWZQT71EMCd4SD9wzijc97Pw3NlN$",
                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp$"
                  ],
                  "script_queries": [
                    {
                      "script_query": "json_body",
                      "script_query_name": "json_body",
                      "script_query_type": "string"
                    },
                    {
                      "script_query": "completions_path",
                      "script_query_name": "completions_path",
                      "script_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02EK4HZB16U6S53Fo4wLR1T1rB6GzsYYqcM",
                "name": "While Loop",
                "title": "While Loop",
                "type": "logic.while",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "While Loop",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02EK4HZBI0G5U4tZbfQ4hDoBTHoPwfyQ6id",
                    "name": "Condition Branch",
                    "title": "If l_openai_retries \u003e= 0",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                        "operator": "gte",
                        "right_operand": 0
                      },
                      "continue_on_failure": false,
                      "display_name": "If l_openai_retries \u003e= 0",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02IEYC3OMUHE95OrpgyANWn6kOCJRsI9Y7N",
                        "name": "Condition Block",
                        "title": "If Langsmith tracing",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "conditions": [],
                          "continue_on_failure": false,
                          "display_name": "If Langsmith tracing",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02IEYC3P4AL0Q3hjw95IiwkGY7K7YeJm97A",
                            "name": "Condition Branch",
                            "title": "Yes",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEYALTTZR886ndklqTQICycspxKv9AyxA$",
                                "operator": "eq",
                                "right_operand": true
                              },
                              "continue_on_failure": false,
                              "display_name": "Yes",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02IFVMIYLTZWL3rtHfHDUIGP1HFB1i5rrY8",
                                "name": "HTTP Request",
                                "title": "Check if parent_run_id exists",
                                "type": "web-service.http_request",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 30,
                                  "allow_auto_redirect": true,
                                  "allow_headers_redirect": false,
                                  "continue_on_error_status_code": true,
                                  "continue_on_failure": true,
                                  "custom_headers": [
                                    {
                                      "name": "x-api-key",
                                      "value": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IFVKEO1UL5F6PoxdQwoiOSpoYoAjAIGuV$"
                                    }
                                  ],
                                  "display_name": "Check if parent_run_id exists",
                                  "method": "GET",
                                  "relative_url": "/api/v1/runs/$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEYGXF873MZ76aUfDWXlgOyhqE2qc3maP$",
                                  "runtime_user": {
                                    "target_default": true
                                  },
                                  "skip_execution": false,
                                  "target": {
                                    "override_workflow_target_group_criteria": true,
                                    "target_group": {
                                      "run_on_all_targets": false,
                                      "use_criteria": {
                                        "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                                        "conditions": [
                                          {
                                            "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                                            "operator": "eq",
                                            "right_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEY9PBBBBRF05hd2yNZsJB9H0CSyedaHB$"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02IEYDDCOFOME7mM3kC2snerqKjFCnXl9Qx",
                                "name": "Execute Python Script",
                                "title": "Get datetime, uuid, parent_runid",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": true,
                                  "display_name": "Get datetime, uuid, parent_runid",
                                  "script": "import datetime\nimport uuid\nimport sys\nimport json\nimport requests\nparent_run_id = sys.argv[1]\nlangsmith_run_id = sys.argv[3]\nlangsmith_parent_exists_sc = sys.argv[4]\nlangsmith_run_name = sys.argv[5]\nlangsmith_project_name = sys.argv[6]\ntime = datetime.datetime.utcnow().isoformat()\ninputs = json.loads(sys.argv[2])\n\nif not langsmith_run_name:\n    langsmith_run_name = 'XDR Automate OpenAIChatCompl'\n\nif parent_run_id:\n    # check if parent_run_id exists\n    if int(langsmith_parent_exists_sc) == 404 and not langsmith_run_id:\n        # parent doesnt exist so lets use it as the run_id\n        langsmith_run_id = parent_run_id\n\nif not langsmith_run_id:\n  langsmith_run_id = str(uuid.uuid4())\n\nls_body = {\n        \"id\": langsmith_run_id,\n        \"extra\": {\n            \"metadata\": { \"instance_id\": \"$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.instance_id$\"}\n                 },\n        \"name\": langsmith_run_name,\n        \"run_type\": \"llm\",\n        \"start_time\": time,\n        \"session_name\": langsmith_project_name,\n        \"inputs\": inputs\n}\n\nif parent_run_id and parent_run_id != langsmith_run_id:\n    ls_body['parent_run_id'] = parent_run_id\n\nls_body = json.dumps(ls_body)",
                                  "script_arguments": [
                                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEYGXF873MZ76aUfDWXlgOyhqE2qc3maP$",
                                    "$activity.definition_activity_02DCVSTR1ZEIQ2Uqo6eOKKodTJi4eaQJG5h.output.script_queries.json_body$",
                                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEZHXFWMY5H565f3U7pa0ZgDvB4De5qPO$",
                                    "$activity.definition_activity_02IFVMIYLTZWL3rtHfHDUIGP1HFB1i5rrY8.output.status_code$",
                                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IFUU2UIQ5955JfYiYwzbinafcEvShf9op$",
                                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IGIKNUC3K4J3pJhV1NRbJ6aXPXYiWo1hA$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "time",
                                      "script_query_name": "time",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "langsmith_run_id",
                                      "script_query_name": "langsmith_run_id",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "parent_run_id",
                                      "script_query_name": "parent_run_id",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "ls_body",
                                      "script_query_name": "ls_body",
                                      "script_query_type": "string"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02IEYECOOW6YG3X85H0GreSVeUu3LTl2XLc",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": true,
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02IEYDTEEUKYX3REGflZEfrxKw7zBuir1FZ$",
                                      "variable_value_new": "$activity.definition_activity_02IEYDDCOFOME7mM3kC2snerqKjFCnXl9Qx.output.script_queries.langsmith_run_id$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEYGXF873MZ76aUfDWXlgOyhqE2qc3maP$",
                                      "variable_value_new": "$activity.definition_activity_02IEYDDCOFOME7mM3kC2snerqKjFCnXl9Qx.output.script_queries.parent_run_id$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02IEYG7XW794O6KnPIix8QDLN5OtATstlrZ",
                                "name": "HTTP Request",
                                "title": "HTTP Request",
                                "type": "web-service.http_request",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "allow_auto_redirect": true,
                                  "allow_headers_redirect": false,
                                  "body": "$activity.definition_activity_02IEYDDCOFOME7mM3kC2snerqKjFCnXl9Qx.output.script_queries.ls_body$",
                                  "content_type": "application/json",
                                  "continue_on_error_status_code": false,
                                  "continue_on_failure": true,
                                  "custom_headers": [
                                    {
                                      "name": "x-api-key",
                                      "value": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IFVKEO1UL5F6PoxdQwoiOSpoYoAjAIGuV$"
                                    }
                                  ],
                                  "display_name": "HTTP Request",
                                  "method": "POST",
                                  "relative_url": "/runs",
                                  "runtime_user": {
                                    "target_default": true
                                  },
                                  "skip_execution": false,
                                  "target": {
                                    "override_workflow_target_group_criteria": true,
                                    "target_group": {
                                      "run_on_all_targets": false,
                                      "use_criteria": {
                                        "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                                        "conditions": [
                                          {
                                            "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                                            "operator": "eq",
                                            "right_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEY9PBBBBRF05hd2yNZsJB9H0CSyedaHB$"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f",
                        "name": "HTTP Request",
                        "title": "Chat Completion Request",
                        "type": "web-service.http_request",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 300,
                          "allow_auto_redirect": true,
                          "allow_headers_redirect": false,
                          "body": "$activity.definition_activity_02DCVSTR1ZEIQ2Uqo6eOKKodTJi4eaQJG5h.output.script_queries.json_body$",
                          "content_type": "application/json",
                          "continue_on_error_status_code": false,
                          "continue_on_failure": true,
                          "custom_headers": [
                            {
                              "name": "Authorization",
                              "value": "Bearer $workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA$"
                            },
                            {
                              "name": "api-key",
                              "value": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02EBOGFELFN6Y4IUaH3pwdRyaQokyBx48pA$"
                            }
                          ],
                          "description": "Creates a model response for the given chat conversation via OpenAI REST Chat Completion \n\n",
                          "display_name": "Chat Completion Request",
                          "method": "POST",
                          "relative_url": "$activity.definition_activity_02DCVSTR1ZEIQ2Uqo6eOKKodTJi4eaQJG5h.output.script_queries.completions_path$",
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "use_workflow_target_group": true
                          }
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02EK4K4HE0Q6Y3sMqhEU26r2OEsQlObSt9l",
                        "name": "Condition Block",
                        "title": "Condition Block",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Condition Block",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02EK4K4HU5G5L7eSZiNsbk5WK4jh4H1NVHs",
                            "name": "Condition Branch",
                            "title": "OpenAi Request Succeeded",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.succeeded$",
                                "operator": "eq",
                                "right_operand": true
                              },
                              "continue_on_failure": false,
                              "display_name": "OpenAi Request Succeeded",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02EK4MFUUEX1P3atqXfvR1Wp5GHAC2Pqu3B",
                                "name": "Set Variables",
                                "title": "Set retries = -1",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set retries = -1",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                                      "variable_value_new": -1
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C",
                                "name": "Execute Python Script",
                                "title": "Process Response",
                                "type": "python3.script",
                                "base_type": "activity",
                                "properties": {
                                  "action_timeout": 180,
                                  "continue_on_failure": false,
                                  "display_name": "Process Response",
                                  "script": "import json\nimport sys\n\ndef contains_true_or_false(input_string):\n    if 'true' in input_string.lower():\n        return True\n    elif 'false' in input_string.lower():\n        return False\n    else:\n        # Handle the case where neither 'true' nor 'false' is found\n        # You can return a default value or raise an exception\n        raise ValueError(\"The input string does not contain 'true' or 'false'.\")\n\ni_messages = sys.argv[1]\nresponse_body_json = sys.argv[2]\nappend_messages = sys.argv[3]\n\n# Export the message from the response\nresp = json.loads(response_body_json)\no_choices = json.dumps(resp.get('choices'))\nresp = resp.get('choices')[0].get('message')\n\n# Export out the mesage content\nif resp['content']:\n    o_message_content = resp['content']\nelse:\n    o_message_content = ''\n\n# If there is a tool_call in the message, export that too\nif 'tool_calls' in resp and resp['tool_calls']:\n    o_tool_calls = json.dumps(resp['tool_calls'])\nelse:\n    o_tool_calls = json.dumps('[]')\n\n# Now export the message to be used for chat history\n# OpenAI doesn't like you sending null messages array, must be empty string\nfor key in [\"tool_calls\", \"function_call\"]:\n    if resp.get(key) is None:\n        resp.pop(key, None)\n\nfor key, value in resp.items():\n    if value is None:\n        resp[key] = ''\n\nif contains_true_or_false(append_messages):\n    o_messages = json.loads(i_messages)\n    o_messages.append(resp)\nelse:\n    o_messages = resp  # Assign the dictionary directly if not appending\n\no_messages = json.dumps(o_messages)  # Convert the final result to a JSON string",
                                  "script_arguments": [
                                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCPG9XUFVXL1LuTteFioSWzi1yPNRlBzp$",
                                    "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.response_body$",
                                    "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02DCWAP5RWCYV3GWvXD2cTbSUsIB0Hwr6WW$"
                                  ],
                                  "script_queries": [
                                    {
                                      "script_query": "o_messages",
                                      "script_query_name": "o_messages",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "o_choices",
                                      "script_query_name": "o_choices",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "o_tool_calls",
                                      "script_query_name": "o_tool_calls",
                                      "script_query_type": "string"
                                    },
                                    {
                                      "script_query": "o_message_content",
                                      "script_query_name": "o_message_content",
                                      "script_query_type": "string"
                                    }
                                  ],
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02DCW885WILJU6FCUJlDpBVTXw7oolJo2PE",
                                "name": "Set Variables",
                                "title": "Set Variables",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set Variables",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DCPMAP4B9XD4FH9ngx5kjgjV2QG1NlpcM$",
                                      "variable_value_new": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.response_body$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DCPMJFLMUOH6MSDxfYhwS5m2mMBIjsGCb$",
                                      "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_choices$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DCPN2FUT0KQ6n4jufZaE0ssnsWAoPXR5V$",
                                      "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_messages$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DEFQ4NLZK706z1Diu44THwhJjav8caCfr$",
                                      "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_message_content$"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02DEFGKNLMAM71HyjMMILdjCi0ZAd7aScKf$",
                                      "variable_value_new": "$activity.definition_activity_02DCW7FZETHQJ1IU7w4j5nl2awW6T5Uj40C.output.script_queries.o_tool_calls$"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02IEYPA8LVL7F3XloVqvzTdMi9omdYhgPnm",
                                "name": "Condition Block",
                                "title": "If Langsmith tracing",
                                "type": "logic.if_else",
                                "base_type": "activity",
                                "properties": {
                                  "conditions": [],
                                  "continue_on_failure": false,
                                  "display_name": "If Langsmith tracing",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity",
                                "blocks": [
                                  {
                                    "unique_name": "definition_activity_02IEYPA8LWBD96Zq8doaaAgyAkEQ8hqflq0",
                                    "name": "Condition Branch",
                                    "title": "Yes",
                                    "type": "logic.condition_block",
                                    "base_type": "activity",
                                    "properties": {
                                      "condition": {
                                        "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEYALTTZR886ndklqTQICycspxKv9AyxA$",
                                        "operator": "eq",
                                        "right_operand": true
                                      },
                                      "continue_on_failure": false,
                                      "display_name": "Yes",
                                      "skip_execution": false
                                    },
                                    "object_type": "definition_activity",
                                    "actions": [
                                      {
                                        "unique_name": "definition_activity_02IEYPA8LZ3VL3KtAZzzKO8yObGBfJUaCdZ",
                                        "name": "Execute Python Script",
                                        "title": "Get datetime",
                                        "type": "python3.script",
                                        "base_type": "activity",
                                        "properties": {
                                          "action_timeout": 180,
                                          "continue_on_failure": true,
                                          "display_name": "Get datetime",
                                          "script": "import datetime\nimport uuid\ntime = datetime.datetime.utcnow().isoformat()",
                                          "script_queries": [
                                            {
                                              "script_query": "time",
                                              "script_query_name": "time",
                                              "script_query_type": "string"
                                            }
                                          ],
                                          "skip_execution": false
                                        },
                                        "object_type": "definition_activity"
                                      },
                                      {
                                        "unique_name": "definition_activity_02IEYPA8M4FJM5LCSS1gNObH79nLhdWk5hI",
                                        "name": "HTTP Request",
                                        "title": "HTTP Request",
                                        "type": "web-service.http_request",
                                        "base_type": "activity",
                                        "properties": {
                                          "action_timeout": 180,
                                          "allow_auto_redirect": true,
                                          "allow_headers_redirect": false,
                                          "body": "{       \"outputs\": $activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.response_body$,\n        \"end_time\": \"$activity.definition_activity_02IEYPA8LZ3VL3KtAZzzKO8yObGBfJUaCdZ.output.script_queries.time$\"\n }",
                                          "content_type": "application/json",
                                          "continue_on_error_status_code": false,
                                          "continue_on_failure": true,
                                          "custom_headers": [
                                            {
                                              "name": "x-api-key",
                                              "value": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IFVKEO1UL5F6PoxdQwoiOSpoYoAjAIGuV$"
                                            }
                                          ],
                                          "display_name": "HTTP Request",
                                          "method": "PATCH",
                                          "relative_url": "/runs/$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.output.variable_workflow_02IEYDTEEUKYX3REGflZEfrxKw7zBuir1FZ$",
                                          "runtime_user": {
                                            "target_default": true
                                          },
                                          "skip_execution": false,
                                          "target": {
                                            "override_workflow_target_group_criteria": true,
                                            "target_group": {
                                              "run_on_all_targets": false,
                                              "use_criteria": {
                                                "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                                                "conditions": [
                                                  {
                                                    "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                                                    "operator": "eq",
                                                    "right_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.input.variable_workflow_02IEY9PBBBBRF05hd2yNZsJB9H0CSyedaHB$"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "object_type": "definition_activity"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02EK4K4I7TX183fQH4CkuFhzZwRZ5IhVbwH",
                            "name": "Condition Branch",
                            "title": "OpenAi Request Failed And Retries Available",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.succeeded$",
                                  "operator": "eq",
                                  "right_operand": false
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                                  "operator": "gt",
                                  "right_operand": 0
                                }
                              },
                              "continue_on_failure": false,
                              "display_name": "OpenAi Request Failed And Retries Available",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02EK4LRDXP38F2wiXTqsUQLGeHXRBCmair0",
                                "name": "Set Variables",
                                "title": "Decrease retry counter",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Decrease retry counter",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                                      "variable_value_new": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$ - 1"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02EK4MB5ESDPW5qWwJhwsNKJmQnvwZc5p2r",
                                "name": "Sleep",
                                "title": "Sleep",
                                "type": "core.sleep",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Sleep",
                                  "skip_execution": false,
                                  "sleep_interval": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JM1T6LQ11pN82CxaX1RDHOkegZzhyh$"
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02EK4KTIEFYD465IeNtgzlVfNoiINY0FVJk",
                            "name": "Condition Branch",
                            "title": "OpenAi Request Failed And No Retries",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.succeeded$",
                                  "operator": "eq",
                                  "right_operand": false
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$workflow.definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk.local.variable_workflow_02EK4JATH9EHF2PSKigI7bWK66u6IYft759$",
                                  "operator": "eq",
                                  "right_operand": 0
                                }
                              },
                              "continue_on_failure": false,
                              "display_name": "OpenAi Request Failed And No Retries",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02EK4LCDMM08L64TzMGXDP58IynURj3F08v",
                                "name": "Completed",
                                "title": "Failed",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Failed",
                                  "result_message": "Error with OpenAI Request: $activity.definition_activity_02DCPN7ZMSHE53mGIST66lLNvtvPIiH2u2f.output.error.message$",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "categories": [
              "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
              "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
            ]
          }
        },
        {
          "workflow": {
            "unique_name": "definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4",
            "name": "Execute Tool Workflow and Waits For Completion",
            "title": "Execute Tool Workflow and Waits For Completion",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.secure_string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "l_access_token",
                  "type": "datatype.secure_string",
                  "description": "Access token for API access. Not used as Automation APIs target should be used",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCYW5KXRFCM0dgeWXbI9ICm2U9PFh4haF",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "02DDM3I7Z4RAS7ZftF69Gj3ucUTorRXXKmR",
                  "scope": "input",
                  "name": "i_wf_id",
                  "type": "datatype.string",
                  "description": "ID of workflow to start",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DDLT1TG2MM8658HoJjmqvbxyKyHAZiKlt",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "{\"i_query\":\"example query\"}\n",
                  "scope": "input",
                  "name": "i_inputs",
                  "type": "datatype.string",
                  "description": "Inputs to the workflow as JSON string",
                  "is_required": true,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DDLTMMGC9GV6vAV5A2jLq5jWLJUQ57wh1",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 0,
                  "scope": "local",
                  "name": "l_workflow_start_status_code",
                  "type": "datatype.integer",
                  "description": "Status code of response in starting workflow",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DLG1YUV2EE84y7wAM2lcbRUL9VIZPPrA6",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "l_workflow_start_response",
                  "type": "datatype.string",
                  "description": "Response body when starting workflow via API",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DLG0R6HW25M2rr4pS9qBuNZ9dMXzwcb6Z",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 15,
                  "scope": "local",
                  "name": "l_poll_time",
                  "type": "datatype.integer",
                  "description": "Time in seconds to poll the API in the event that the run instance is in pending or running state",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DLGD585Z4YF5hFlOxShnB4yK0cFEYN8ac",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_message_content",
                  "type": "datatype.string",
                  "description": "Message content from the workflow instance ",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCZ17G5QHI44uutRtYxa5oiOQeBx9BVRD",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "",
                  "scope": "output",
                  "name": "o_instance_id",
                  "type": "datatype.string",
                  "description": "Instance id of the executed workflow",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DCZ1BVXK7X93hACqQPMnnf4CHuqVyIPEL",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "true",
                  "scope": "local",
                  "name": "l_run_loop",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false,
                  "variable_string_format": ""
                },
                "unique_name": "variable_workflow_02DIW5OT2PEXT04a4sEtJhsewecDoGzJec1",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "description": "Executes a tool workflow, waits for completion, and outputs the result of the workflow",
              "display_name": "Execute Tool Workflow and Waits For Completion",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "execute_on_target_group": true,
                "target_group": {
                  "target_group_id": "target_group_01HLKTH50I3ZU5IfL3dwQos38eRFcE5gYjM",
                  "run_on_all_targets": false,
                  "selected_target_types": [
                    "web-service.endpoint"
                  ],
                  "use_criteria": {
                    "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                    "conditions": [
                      {
                        "operator": "eq",
                        "left_operand": "$targetgroup.target_group_01HLKTH50I3ZU5IfL3dwQos38eRFcE5gYjM.common.display_name$",
                        "right_operand": "Automation APIs"
                      }
                    ]
                  }
                }
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02DLFUD8MF6EC3kcEMiWY5u4qOi5SSKepOS",
                "name": "Group",
                "title": "Start Workflow Execution",
                "type": "logic.group",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Starts workflow execution, based on workflow from kaskalny",
                  "display_name": "Start Workflow Execution",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DLFUSTDAYSW1SEk1KuhkbGMg7xhZwsrfD",
                    "name": "Execute Python Script",
                    "title": "Execute Python Script",
                    "type": "python3.script",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "display_name": "Execute Python Script",
                      "script": "import requests\nimport sys\nfrom typing import Any, TypedDict \nimport json\n\nclass InputVariableProperties(TypedDict):\n    name: str\n    value: Any\n\nclass InputVariable(TypedDict):\n    properties: InputVariableProperties\n\ndef dict_to_input_variables(data:dict[str, Any]) -\u003e list[InputVariable]:\n    return [\n        {\n            \"properties\":{\n                \"name\":key,\n                \"value\":json.dumps(value) if isinstance(value, (dict, list)) else value\n            }\n\n        } for (key, value) in data.items()\n    ]\n\n\nwf_id_or_unique_name = sys.argv[1].strip()\nparams = {}\nif wf_id_or_unique_name.startswith(\"definition_workflow_\"):\n  params[\"unique_name\"] = wf_id_or_unique_name\nelse:\n  params[\"workflow_id\"] = wf_id_or_unique_name\n\nworkflow_inputs = json.loads(sys.argv[2])\nsync = json.loads(\"true\")\nparams[\"sync\"] = sync\n\nprepared_request = requests.Request(\n    url=\"https://localhost/api/v1/workflows/start\",\n    params=params,\n    json={\n        \"input_variables\":dict_to_input_variables(workflow_inputs)\n    },\n).prepare()\n\npath = prepared_request.path_url\nbody = prepared_request.body.decode()",
                      "script_arguments": [
                        "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.input.variable_workflow_02DDLT1TG2MM8658HoJjmqvbxyKyHAZiKlt$",
                        "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.input.variable_workflow_02DDLTMMGC9GV6vAV5A2jLq5jWLJUQ57wh1$"
                      ],
                      "script_queries": [
                        {
                          "script_query": "path",
                          "script_query_name": "path",
                          "script_query_type": "string"
                        },
                        {
                          "script_query": "body",
                          "script_query_name": "body",
                          "script_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DLFYCROKB0L0sidHcttSSQmSO0kr7zDrX",
                    "name": "HTTP Request",
                    "title": "Start Workflow Synchronically",
                    "type": "web-service.http_request",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "allow_auto_redirect": true,
                      "allow_headers_redirect": false,
                      "body": "$activity.definition_activity_02DLFUSTDAYSW1SEk1KuhkbGMg7xhZwsrfD.output.script_queries.body$",
                      "continue_on_error_status_code": false,
                      "continue_on_failure": false,
                      "display_name": "Start Workflow Synchronically",
                      "method": "POST",
                      "relative_url": "$activity.definition_activity_02DLFUSTDAYSW1SEk1KuhkbGMg7xhZwsrfD.output.script_queries.path$",
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "use_workflow_target_group": true
                      }
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DLG17I3F9RR4w2zLZs7fdUfKAh5yuRkcd",
                    "name": "Set Variables",
                    "title": "Set Variables",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Set local variables which hold response body and sc",
                      "display_name": "Set Variables",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG0R6HW25M2rr4pS9qBuNZ9dMXzwcb6Z$",
                          "variable_value_new": "$activity.definition_activity_02DLFYCROKB0L0sidHcttSSQmSO0kr7zDrX.output.response_body$"
                        },
                        {
                          "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG1YUV2EE84y7wAM2lcbRUL9VIZPPrA6$",
                          "variable_value_new": "$activity.definition_activity_02DLFYCROKB0L0sidHcttSSQmSO0kr7zDrX.output.status_code$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02DLG48OUFKHZ5r9QiAsxuQgMTEd1cg8V2k",
                    "name": "Condition Block",
                    "title": "Condition Block",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Condition Block",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02DLG48PBB5OV7WaRXG9mSrZj1SuZmLZo1a",
                        "name": "Condition Branch",
                        "title": "200 Successfully finished - if in sync mode",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG1YUV2EE84y7wAM2lcbRUL9VIZPPrA6$",
                            "operator": "eq",
                            "right_operand": 200
                          },
                          "continue_on_failure": false,
                          "display_name": "200 Successfully finished - if in sync mode",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02DLG48PRIBSW6p2ntQ8iqm2SiJh0YuAdVo",
                        "name": "Condition Branch",
                        "title": "202 Successfully created",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG1YUV2EE84y7wAM2lcbRUL9VIZPPrA6$",
                            "operator": "eq",
                            "right_operand": 202
                          },
                          "continue_on_failure": false,
                          "display_name": "202 Successfully created",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02DLG5BSPQ3CA4faMKbeJ8vmoQzUWMvoIFG",
                        "name": "Condition Branch",
                        "title": "5xx",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG1YUV2EE84y7wAM2lcbRUL9VIZPPrA6$",
                            "operator": "gte",
                            "right_operand": 500
                          },
                          "continue_on_failure": false,
                          "display_name": "5xx",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02DLG5SS9HOQO2nyZGZu1zWP3WGcWjJQ1Tz",
                            "name": "Completed",
                            "title": "Completed",
                            "type": "logic.completed",
                            "base_type": "activity",
                            "properties": {
                              "completion_type": "failed-completed",
                              "continue_on_failure": false,
                              "display_name": "Completed",
                              "result_message": "5xx Server Error: $activity.definition_activity_02DLFYCROKB0L0sidHcttSSQmSO0kr7zDrX.output.error.message$",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02DLG6GP17H4M46xM1KkxSvLh3XQwgXMd1u",
                        "name": "Condition Branch",
                        "title": "4xx",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG1YUV2EE84y7wAM2lcbRUL9VIZPPrA6$",
                            "operator": "gte",
                            "right_operand": 400
                          },
                          "continue_on_failure": false,
                          "display_name": "4xx",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02DLG6GP1838I4u2Bn6cQoBDVxZYMj04Ggf",
                            "name": "Completed",
                            "title": "Completed",
                            "type": "logic.completed",
                            "base_type": "activity",
                            "properties": {
                              "completion_type": "failed-completed",
                              "continue_on_failure": false,
                              "display_name": "Completed",
                              "result_message": "4xx Server Error: $activity.definition_activity_02DLFYCROKB0L0sidHcttSSQmSO0kr7zDrX.output.error.message$",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02DLG6XBHFGN00cN0bMKYaiPFosaD1G9JTE",
                    "name": "JSONPath Query",
                    "title": "Extract Run_id",
                    "type": "corejava.jsonpathquery",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "display_name": "Extract Run_id",
                      "input_json": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLG0R6HW25M2rr4pS9qBuNZ9dMXzwcb6Z$",
                      "jsonpath_queries": [
                        {
                          "jsonpath_query": "$..id",
                          "jsonpath_query_name": "run_id",
                          "jsonpath_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02DIW4Z502MTV190lBs5VGt1JftjhZEx56i",
                "name": "While Loop",
                "title": "While instance in running OR waiting_for_event state",
                "type": "logic.while",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "While instance in running OR waiting_for_event state",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02DIW4Z5GBMUG56f2H189VzJG5wAw4kY3L5",
                    "name": "Condition Branch",
                    "title": "Condition Branch",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DIW5OT2PEXT04a4sEtJhsewecDoGzJec1$",
                        "operator": "eq",
                        "right_operand": "true"
                      },
                      "continue_on_failure": false,
                      "display_name": "Condition Branch",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02DCYSR47JFLK1fqoqIsQ3u2aHiBEYw73a8",
                        "name": "HTTP Request",
                        "title": "Retrieve Workflow Instance",
                        "type": "web-service.http_request",
                        "base_type": "activity",
                        "properties": {
                          "accept": "application/json",
                          "action_timeout": 180,
                          "allow_auto_redirect": true,
                          "allow_headers_redirect": false,
                          "content_type": "application/json",
                          "continue_on_error_status_code": false,
                          "continue_on_failure": false,
                          "description": "Gets the workflow instance data",
                          "display_name": "Retrieve Workflow Instance",
                          "method": "GET",
                          "relative_url": "/api/v1/instances/$activity.definition_activity_02DLG6XBHFGN00cN0bMKYaiPFosaD1G9JTE.output.jsonpath_queries.run_id$",
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "override_workflow_target": true,
                            "target_id": "$module_target;Cisco XDR;securex:ao:sxo;automation-apis$"
                          }
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02DDM0YQDPTG35Lw8DyDXD45nrZJXapTZoe",
                        "name": "JSONPath Query",
                        "title": "JSONPath Query",
                        "type": "corejava.jsonpathquery",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "JSONPath Query",
                          "input_json": "$activity.definition_activity_02DCYSR47JFLK1fqoqIsQ3u2aHiBEYw73a8.output.response_body$",
                          "jsonpath_queries": [
                            {
                              "jsonpath_query": "$.variables[?(@.properties.name=='o_message_content')].properties.value",
                              "jsonpath_query_name": "message_content",
                              "jsonpath_query_type": "string",
                              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                            },
                            {
                              "jsonpath_query": "$.status.state",
                              "jsonpath_query_name": "state",
                              "jsonpath_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02DCZ0TW1KF0C6qz3nZQP1ZHjSNUvCJH9Il",
                        "name": "Set Variables",
                        "title": "Set Output Variables",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Output Variables",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.output.variable_workflow_02DCZ17G5QHI44uutRtYxa5oiOQeBx9BVRD$",
                              "variable_value_new": "$activity.definition_activity_02DDM0YQDPTG35Lw8DyDXD45nrZJXapTZoe.output.jsonpath_queries.message_content$"
                            },
                            {
                              "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.output.variable_workflow_02DCZ1BVXK7X93hACqQPMnnf4CHuqVyIPEL$",
                              "variable_value_new": "$activity.definition_activity_02DLG6XBHFGN00cN0bMKYaiPFosaD1G9JTE.output.jsonpath_queries.run_id$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_02DF9PGR4KGJ43so2qmD2HqoNSdfoMw5O2Y",
                        "name": "Condition Block",
                        "title": "Condition Block",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Condition Block",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_02DF9PGRWGXS51J2MuH364ueLGAhzj13Xkb",
                            "name": "Condition Branch",
                            "title": "If Called Workflow Instance state=failed",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$activity.definition_activity_02DDM0YQDPTG35Lw8DyDXD45nrZJXapTZoe.output.jsonpath_queries.state$",
                                "operator": "eq",
                                "right_operand": "failed"
                              },
                              "continue_on_failure": false,
                              "description": "If workflow instance failed, fails this workflow",
                              "display_name": "If Called Workflow Instance state=failed",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02DF9PLAHXZ814d3CrnEocrniPwmZHjXilw",
                                "name": "Completed",
                                "title": "Set Workflow To Failed",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Set Workflow To Failed",
                                  "result_message": "Workflow has failed",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              },
                              {
                                "unique_name": "definition_activity_02DIXBD1TKVV24NBs53NkbCUkmgyMvcrpLR",
                                "name": "Set Variables",
                                "title": "Set l_run_loop variable=false",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set l_run_loop variable=false",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DIW5OT2PEXT04a4sEtJhsewecDoGzJec1$",
                                      "variable_value_new": "false"
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          },
                          {
                            "unique_name": "definition_activity_02DIX8C0V5YIG7lVk20VW9KMFkru0oIv6z3",
                            "name": "Condition Branch",
                            "title": "If not running or wait_for_event",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": {
                                  "left_operand": "$activity.definition_activity_02DDM0YQDPTG35Lw8DyDXD45nrZJXapTZoe.output.jsonpath_queries.state$",
                                  "operator": "ne",
                                  "right_operand": "running"
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$activity.definition_activity_02DDM0YQDPTG35Lw8DyDXD45nrZJXapTZoe.output.jsonpath_queries.state$",
                                  "operator": "ne",
                                  "right_operand": "waiting_for_event"
                                }
                              },
                              "continue_on_failure": false,
                              "display_name": "If not running or wait_for_event",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_02DIW78G8J6TQ4RbDhUjYAhIIBueEukP5Bt",
                                "name": "Set Variables",
                                "title": "Set l_run_loop variable=false AND l_poll_time=0",
                                "type": "core.set_multiple_variables",
                                "base_type": "activity",
                                "properties": {
                                  "continue_on_failure": false,
                                  "display_name": "Set l_run_loop variable=false AND l_poll_time=0",
                                  "skip_execution": false,
                                  "variables_to_update": [
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DIW5OT2PEXT04a4sEtJhsewecDoGzJec1$",
                                      "variable_value_new": "false"
                                    },
                                    {
                                      "variable_to_update": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLGD585Z4YF5hFlOxShnB4yK0cFEYN8ac$",
                                      "variable_value_new": 0
                                    }
                                  ]
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02DIWFKE44SDD1AiTt8wOXiQ7k3y4JSyLte",
                        "name": "Sleep",
                        "title": "Sleep",
                        "type": "core.sleep",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Sleep",
                          "skip_execution": false,
                          "sleep_interval": "$workflow.definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4.local.variable_workflow_02DLGD585Z4YF5hFlOxShnB4yK0cFEYN8ac$"
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ],
            "categories": [
              "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
              "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
            ]
          }
        }
      ],
      "dependent_workflows": [
        "definition_workflow_02DCWQY555WLO3MITwzexVpEIJ8Zc8RfAO6",
        "definition_workflow_02DCP9NG0ZARR2GH2YD4cxUH7onr6EZ5Tyk",
        "definition_workflow_02DCYSR1UQ31Z3x70x1r2ulLN1wLgLISTK4"
      ]
    }
  ],
  "dependent_workflows": [
    "definition_workflow_02I5LQEFBMEB422JHRKY7g4FJXQLOJiYPJy",
    "definition_workflow_02JGIZBHJ2P3N7ar9Au4l6VY1Ga8CJckfnI"
  ],
  "module_targets": [
    {
      "module_type": "Cisco XDR",
      "external_id": "securex:ao:sxo",
      "proxy_endpoint_metadata_id": "automation-apis"
    },
    {
      "module_type": "Cisco XDR",
      "external_id": "securex:ao:iroh_api",
      "proxy_endpoint_metadata_id": "platform-apis"
    }
  ]
}