{
  "workflow": {
    "unique_name": "definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T",
    "name": "Ingest Table To Pinecone With OpenAI Embeddings",
    "title": "Ingest Table To Pinecone With OpenAI Embeddings",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "{}",
          "scope": "local",
          "name": "l_table_json",
          "type": "datatype.string",
          "description": "A json list of information read from table in format:\n[\n{ \"id\": \"xxxx\",\n  \"key\": \"xxxx\",\n  \"metadata\": {\"x1\": \"xxxxx\" , \"x2\": \"xxxx\"}\n]",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02I5HOAGQR6J43YGRgBNpeGSTpI3F5sSNNy",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "incident_description",
          "scope": "input",
          "name": "i_input_key",
          "type": "datatype.string",
          "description": "The key in the table that will be converted to embeddings and inserted into index.   The other columns in the table besides id will be added to metadata",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02I5HP8CD9G8F7ZaBU4NUkvwluisUkBaze7",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "[]",
          "scope": "local",
          "name": "l_vectors_json",
          "type": "datatype.string",
          "description": "A list of vectors read from table in format:\n\n[\n      {\n        \"id\": \"A\",\n        \"values\": [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],\n        \"metadata\": {\"genre\": \"comedy\", \"year\": 2020}\n      },\n      {\n        \"id\": \"B\",\n        \"values\": [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2],\n        \"metadata\": {\"genre\": \"documentary\", \"year\": 2019}\n      }\n]",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02I5HN9DG820A2C8Ny0ZFNNp2qRMqMTvoIr",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "display_name": "Ingest Table To Pinecone With OpenAI Embeddings",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "no_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02I5HXFZ0R96S4Wpa3NP9VK8nUs5NHfULFF",
        "name": "Select from Table",
        "title": "Read Table",
        "type": "core.selectfromtable",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "columns": [],
          "continue_on_failure": false,
          "display_name": "Read Table",
          "input_table": "$global.variable_02I5LNPBQ93XC1zSKpMPBraALxBK3AE0vHp.global.variable_02I5LNPBQ93XC1zSKpMPBraALxBK3AE0vHp$",
          "number_of_rows": {
            "all_rows": true
          },
          "persist_output": false,
          "skip_execution": false,
          "sorting": {
            "no_sort": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02I5HWIOS1UQL0xx7IuNnfx4xyO20KXW3ns",
        "name": "Execute Python Script",
        "title": "Update l_table_json",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Converts the table to format\n\n[\n{ \"id\": \"xxxx\",\n  \"key\": \"xxxx\",\n  \"metadata\": {\"x1\": \"xxxxx\" , \"x2\": \"xxxx\"}\n]",
          "display_name": "Update l_table_json",
          "script": "import sys\nimport json\n\ndef transform_json(json_data, key):\n    transformed_list = []\n    for item in json_data:\n        transformed_item = {\n            \"id\": str(item[\"id\"]),\n            \"key\": item[key],\n            \"metadata\": {k: v for k, v in item.items() if k not in [\"id\", key]}\n        }\n        transformed_list.append(transformed_item)\n    return json.dumps(transformed_list)\n\njson_string = sys.argv[1]\nkey = sys.argv[2]\n\n# Parse the JSON string\ntry:\n    json_data = json.loads(json_string)\nexcept json.JSONDecodeError as e:\n    print(f\"Error decoding JSON: {e}\")\n    sys.exit(1)\n\n# Transform the JSON data\nl_table_json = transform_json(json_data, key)\n\n# Print the transformed JSON data\nprint(json.dumps(l_table_json, indent=2))",
          "script_arguments": [
            "$activity.definition_activity_02I5HXFZ0R96S4Wpa3NP9VK8nUs5NHfULFF.output.response_body$",
            "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.input.variable_workflow_02I5HP8CD9G8F7ZaBU4NUkvwluisUkBaze7$"
          ],
          "script_queries": [
            {
              "script_query": "l_table_json",
              "script_query_name": "l_table_json",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02I5I3RC85SBZ7fkEwYC5kIY2sPYQsTOLlN",
        "name": "Set Variables",
        "title": "Set Variables",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Set Variables",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.local.variable_workflow_02I5HOAGQR6J43YGRgBNpeGSTpI3F5sSNNy$",
              "variable_value_new": "$activity.definition_activity_02I5HWIOS1UQL0xx7IuNnfx4xyO20KXW3ns.output.script_queries.l_table_json$"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02I5I74RGFXEU6ZrWMriRBSb1d9L7K0m8cB",
        "name": "Read Table from JSON",
        "title": "Read Table from JSON",
        "type": "corejava.read_table_from_json",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Read Table from JSON",
          "input_json": "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.local.variable_workflow_02I5HOAGQR6J43YGRgBNpeGSTpI3F5sSNNy$",
          "jsonpath_query": "$.*",
          "persist_output": false,
          "populate_columns": false,
          "skip_execution": false,
          "table_columns": [
            {
              "column_name": "id",
              "column_type": "string"
            },
            {
              "column_name": "key",
              "column_type": "string"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02I5I95FDD9CE3l6R0PsSNLzBycii1ONCae",
        "name": "For Each",
        "title": "Get Embeddings For Each Key",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Get Embeddings For Each Key",
          "skip_execution": false,
          "source_array": "$activity.definition_activity_02I5I74RGFXEU6ZrWMriRBSb1d9L7K0m8cB.output.read_table_from_json$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02I5I9ME5605K1tKlC7rgcfTsVfcjefS957",
            "name": "OpenAI Embeddings",
            "title": "OpenAI Embeddings",
            "type": "workflow.sub_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "display_name": "OpenAI Embeddings",
              "input": {
                "variable_workflow_02I266TFABZML2ETUcAflrTMdRri7NtHxvg": "poc-text-embedding-3-large",
                "variable_workflow_02I266TFACU0T4nJVQwgUOm6NwJLX2oio1O": "CL - AzureOpenAI",
                "variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS": "$global.variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN.global.variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN$",
                "variable_workflow_02I26AYEVQEFL5sMw1LGbt826iFNfrUepZM": true,
                "variable_workflow_02I26D3G137155NrpdzI8CsxasPk7Kxbcly": "2024-06-01",
                "variable_workflow_02I26JZI9L54B1lMQi6fKZXvWAfcEQeOsdb": "$activity.definition_activity_02I5I95FDD9CE3l6R0PsSNLzBycii1ONCae.input.source_array[@].key$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "execute_on_this_target_group": true,
                "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY"
              },
              "workflow_id": "definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z",
              "workflow_name": "OpenAI Embeddings"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02I5KABF371VS60oHRC1TqlXy2TdBr4XXvw",
            "name": "Execute Python Script",
            "title": "Execute Python Script",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Execute Python Script",
              "script": "import sys\nimport json\n\nl_table_json = sys.argv[1]\nl_table_vectors_json = sys.argv[2]\no_response_data = sys.argv[3]\nid = sys.argv[4]\n\n# Parse the JSON strings\ntry:\n    l_table = json.loads(l_table_json)\n    l_table_vectors = json.loads(l_table_vectors_json)\n    o_response = json.loads(o_response_data)\nexcept json.JSONDecodeError as e:\n    print(f\"Error decoding JSON: {e}\")\n    sys.exit(1)\n\n# Find the embedding and metadata for the specified id\nembedding = None\nmetadata = None\n\nfor item in l_table:\n    if item[\"id\"] == id:\n        metadata = item[\"metadata\"]\n        break\n\nfor item in o_response:\n    if 'embedding' in item:\n        embedding = item[\"embedding\"]\n        break\n\nif embedding is None or metadata is None:\n    print(\"Error: Could not find embedding or metadata for the given id.\")\n    sys.exit(1)\n\n# Create the new item\nnew_item = {\n    \"id\": id,\n    \"values\": embedding,\n    \"metadata\": metadata\n}\n\n# Append the new item to the l_table_vectors_json\nl_table_vectors.append(new_item)\n\nl_table_vectors_json = json.dumps(l_table_vectors)",
              "script_arguments": [
                "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.local.variable_workflow_02I5HOAGQR6J43YGRgBNpeGSTpI3F5sSNNy$",
                "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.local.variable_workflow_02I5HN9DG820A2C8Ny0ZFNNp2qRMqMTvoIr$",
                "$activity.definition_activity_02I5I9ME5605K1tKlC7rgcfTsVfcjefS957.output.variable_workflow_02I26J3PGLV4K1oc7FTRaHXd51SPELwGAhH$",
                "$activity.definition_activity_02I5I95FDD9CE3l6R0PsSNLzBycii1ONCae.input.source_array[@].id$"
              ],
              "script_queries": [
                {
                  "script_query": "l_table_vectors_json",
                  "script_query_name": "l_table_vectors_json",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02I5KTC8W65F06ty8tjoF42eXN1QcKrCQYP",
            "name": "Set Variables",
            "title": "Set Variables",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Set Variables",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.local.variable_workflow_02I5HN9DG820A2C8Ny0ZFNNp2qRMqMTvoIr$",
                  "variable_value_new": "$activity.definition_activity_02I5KABF371VS60oHRC1TqlXy2TdBr4XXvw.output.script_queries.l_table_vectors_json$"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02I5KZGK6MXIX1lpogenWeYi15TdI4i5hwX",
        "name": "Pinecone - Upsert Vectors",
        "title": "Pinecone - Upsert Vectors",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Pinecone - Upsert Vectors",
          "input": {
            "variable_workflow_02I5GYRHAONX43MXlxcBUBW1oBa2Hyemp5S": "$workflow.definition_workflow_02I5HJF6AG7PV3TdzLgc5kTdv9nJ8Lnp52T.local.variable_workflow_02I5HN9DG820A2C8Ny0ZFNNp2qRMqMTvoIr$"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "execute_on_this_target": true,
            "target_id": "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c",
            "target_type": "web-service.endpoint"
          },
          "workflow_id": "definition_workflow_02I5G6LQ5724F6L6nXXkLBgBlB2uYEife8z",
          "workflow_name": "Pinecone - Upsert Data"
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
      "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
    ]
  },
  "categories": {
    "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85": {
      "unique_name": "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85",
      "name": "CLUS24",
      "title": "CLUS24",
      "type": "basic.category",
      "base_type": "category",
      "description": "Workflows \u0026 Atomic Actions for Cisco Live 2024 Session BRKATO-1557: Automating Detection \u0026 Response Outcomes using Cisco XDR and Generative AI",
      "category_type": "custom",
      "object_type": "category"
    },
    "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M": {
      "unique_name": "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
      "name": "CLEUR25",
      "title": "CLEUR25",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  },
  "targets": {
    "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c": {
      "unique_name": "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c",
      "name": "CL - Pinecone",
      "title": "CL - Pinecone",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": false,
        "display_name": "CL - Pinecone",
        "host": "ciscolive-b2is8p9.svc.aped-4627-b74a.pinecone.io",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "protocol": "https"
      }
    }
  },
  "target_groups": {
    "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY": {
      "unique_name": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
      "name": "HTTP Targets",
      "title": "HTTP Targets",
      "type": "generic.target_group",
      "base_type": "target_group",
      "version": "1.0.0",
      "targets": [
        {
          "data_target_type": "web-service.endpoint",
          "view_target_type": "web-service.endpoint",
          "include_all_targets": true
        }
      ],
      "object_type": "target_group"
    }
  },
  "variables": {
    "variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm": {
      "unique_name": "variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm",
      "properties": {
        "value": "*****",
        "scope": "global",
        "name": "CL - Pinecone API Key",
        "type": "datatype.secure_string",
        "description": "API Key for accessing pinecone apis",
        "is_required": false,
        "display_on_wizard": false,
        "is_invisible": false,
        "variable_string_format": ""
      },
      "object_type": "variable"
    },
    "variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN": {
      "unique_name": "variable_02I5IAOKC154G5nLZT78bYWo2yXywI9NdBN",
      "properties": {
        "value": "*****",
        "scope": "global",
        "name": "CL - AzureOpenAI - API Key",
        "type": "datatype.secure_string",
        "is_required": false,
        "display_on_wizard": false,
        "is_invisible": false,
        "variable_string_format": ""
      },
      "object_type": "variable"
    },
    "variable_02I5LNPBQ93XC1zSKpMPBraALxBK3AE0vHp": {
      "unique_name": "variable_02I5LNPBQ93XC1zSKpMPBraALxBK3AE0vHp",
      "schema_id": "tabletype_01XOPFC33V85L3ZcbckMlEO59nmYnUhtqOY",
      "properties": {
        "value": [
          {
            "column_data": {
              "id": 1,
              "incident_description": "Command And Control",
              "instructions": "Investigate security category type using your tools such as Umbrella. If the type is confirmed as Command and Control (C2) traffic, classify it as high risk, and proceed to isolate the endpoint as a precautionary measure.",
              "name": "Command And Control"
            }
          },
          {
            "column_data": {
              "id": 2,
              "incident_description": "Ransomware",
              "instructions": "These are some instructions for handling this",
              "name": "Ransomware",
              "other_meta_1": ""
            }
          }
        ],
        "scope": "global",
        "name": "Cl Incident Handling Table",
        "type": "datatype.table",
        "is_required": false,
        "display_on_wizard": false,
        "is_invisible": false,
        "variable_string_format": ""
      },
      "object_type": "variable"
    }
  },
  "table_types": {
    "tabletype_01XOPFC33V85L3ZcbckMlEO59nmYnUhtqOY": {
      "unique_name": "tabletype_01XOPFC33V85L3ZcbckMlEO59nmYnUhtqOY",
      "data_type": "datatype.tabletype",
      "display_name": "CL Incident Handling Table",
      "description": "CL Incident Handling Table",
      "columns": [
        {
          "is_required": true,
          "maxLength": 99999999,
          "maximum": 0,
          "minimum": 0,
          "name": "name",
          "title": "name",
          "type": "string"
        },
        {
          "is_required": true,
          "maxLength": 99999999,
          "maximum": 0,
          "minimum": 0,
          "name": "instructions",
          "title": "instructions",
          "type": "string"
        },
        {
          "is_required": true,
          "maxLength": 999999,
          "maximum": 999999,
          "minimum": 1,
          "name": "id",
          "title": "id",
          "type": "integer"
        },
        {
          "is_required": true,
          "maxLength": 99999999,
          "maximum": 0,
          "minimum": 0,
          "name": "incident_description",
          "title": "incident_description",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z",
        "name": "OpenAI Embeddings",
        "title": "OpenAI Embeddings",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "api.openai.com",
              "scope": "input",
              "name": "i_openai_http_target_name",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02I266TFACU0T4nJVQwgUOm6NwJLX2oio1O",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "i_input",
              "type": "datatype.string",
              "description": "The input which will be sent to the embeddings model",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02I26JZI9L54B1lMQi6fKZXvWAfcEQeOsdb",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "text-embedding-ada-002",
              "scope": "input",
              "name": "i_model",
              "type": "datatype.string",
              "description": "LLM Model to be used.  For Azure, model is the same as deployment",
              "is_required": false,
              "display_on_wizard": true,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02I266TFABZML2ETUcAflrTMdRri7NtHxvg",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "[]",
              "scope": "output",
              "name": "o_response",
              "type": "datatype.string",
              "description": "The tool calls from the response message",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02I266TFAEV8D3GCoOMaIwTjS2YvkT6j7r1",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 30,
              "scope": "local",
              "name": "l_seconds_between_retries",
              "type": "datatype.integer",
              "description": "Maximum number of seconds between retry attempts. ",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02I266TFAFDDL5ebEkqQTTISxGJFUIaxr0i",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "input",
              "name": "i_azure",
              "type": "datatype.boolean",
              "description": "Set to true if using AzureOpenAI",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02I26AYEVQEFL5sMw1LGbt826iFNfrUepZM",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.integer",
            "properties": {
              "value": 1,
              "scope": "local",
              "name": "l_openai_retries",
              "type": "datatype.integer",
              "description": "Determines the number of retry attempts made to OpenAI",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "2024-06-01",
              "scope": "input",
              "name": "i_azure_api_version",
              "type": "datatype.string",
              "description": "The api-version used when executing with Azure",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "text"
            },
            "unique_name": "variable_workflow_02I26D3G137155NrpdzI8CsxasPk7Kxbcly",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "o_response_data",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02I26J3PGLV4K1oc7FTRaHXd51SPELwGAhH",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.secure_string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "i_openai_api_key",
              "type": "datatype.secure_string",
              "description": "The api bearer token for openai or azure",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": ""
            },
            "unique_name": "variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "description": "Executes a call to the Azure or OpenAI Embeddings API",
          "display_name": "OpenAI Embeddings",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "execute_on_target_group": true,
            "target_group": {
              "target_group_id": "target_group_02EBOJDJPU5TC3pSXJVlVFlkbm7Onze3GGY",
              "run_on_all_targets": false,
              "selected_target_types": [
                "web-service.endpoint"
              ],
              "use_criteria": {
                "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                "conditions": [
                  {
                    "operator": "eqi",
                    "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                    "right_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFACU0T4nJVQwgUOm6NwJLX2oio1O$"
                  }
                ]
              }
            }
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02I266TPE8ETW0wOAHDCbql13O6DgO4KIy7",
            "name": "While Loop",
            "title": "While Loop",
            "type": "logic.while",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "While Loop",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02I266TQNTCDQ2FGgmUHaSxKX8G2Abs7fvh",
                "name": "Condition Branch",
                "title": "If l_openai_retries \u003e= 0",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                    "operator": "gte",
                    "right_operand": 0
                  },
                  "continue_on_failure": false,
                  "display_name": "If l_openai_retries \u003e= 0",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02I26BXGSR8ID2RxjZaIki6xTmbw06pCXOk",
                    "name": "Execute Python Script",
                    "title": "Create URI And Body",
                    "type": "python3.script",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "display_name": "Create URI And Body",
                      "script": "import sys\nimport json\n\nmodel_id = sys.argv[1]\napi_version = sys.argv[2]\ninput_str = sys.argv[3]\nis_azure = sys.argv[4]\n\nif is_azure == 'true':\n  is_azure = True\nelse:\n  is_azure = False\n\nif is_azure:\n  embeddings_path = f'/openai/deployments/{model_id}/embeddings?api-version={api_version}'\n  embeddings_body = {\"input\": f\"{input_str}\"}\n  embeddings_body = json.dumps(embeddings_body)\nelse:\n  embeddings_path = '/embeddings'\n  embeddings_body = {\"input\": f\"{input_str}\", \"model\": model_id}\n  embeddings_body = json.dumps(embeddings_body)\n\n",
                      "script_arguments": [
                        "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFABZML2ETUcAflrTMdRri7NtHxvg$",
                        "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I26D3G137155NrpdzI8CsxasPk7Kxbcly$",
                        "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I26JZI9L54B1lMQi6fKZXvWAfcEQeOsdb$",
                        "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I26AYEVQEFL5sMw1LGbt826iFNfrUepZM$"
                      ],
                      "script_queries": [
                        {
                          "script_query": "embeddings_path",
                          "script_query_name": "embeddings_path",
                          "script_query_type": "string"
                        },
                        {
                          "script_query": "embeddings_body",
                          "script_query_name": "embeddings_body",
                          "script_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH",
                    "name": "HTTP Request",
                    "title": "Embeddings Request",
                    "type": "web-service.http_request",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 30,
                      "allow_auto_redirect": true,
                      "allow_headers_redirect": false,
                      "body": "$activity.definition_activity_02I26BXGSR8ID2RxjZaIki6xTmbw06pCXOk.output.script_queries.embeddings_body$",
                      "content_type": "application/json",
                      "continue_on_error_status_code": false,
                      "continue_on_failure": true,
                      "custom_headers": [
                        {
                          "name": "Authorization",
                          "value": "Bearer $workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS$"
                        },
                        {
                          "name": "api-key",
                          "value": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.input.variable_workflow_02I266TFADZVI0R8TzGkglNtARVi62qzBfS$"
                        }
                      ],
                      "description": "Gets embeddings for a given query\n\n",
                      "display_name": "Embeddings Request",
                      "method": "POST",
                      "relative_url": "$activity.definition_activity_02I26BXGSR8ID2RxjZaIki6xTmbw06pCXOk.output.script_queries.embeddings_path$",
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "use_workflow_target_group": true
                      }
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02I266TTXPJQ500lXtsRyhUhiKPfLWNI5v7",
                    "name": "Condition Block",
                    "title": "Condition Block",
                    "type": "logic.if_else",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Condition Block",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "blocks": [
                      {
                        "unique_name": "definition_activity_02I266TVAPZZJ4sb99FGi5Bm0eUJa3w7dJF",
                        "name": "Condition Branch",
                        "title": "OpenAi Request Succeeded",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.succeeded$",
                            "operator": "eq",
                            "right_operand": true
                          },
                          "continue_on_failure": false,
                          "display_name": "OpenAi Request Succeeded",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02I266TX8S16A4yETtBtvWQVHaiDZpPRm9b",
                            "name": "Set Variables",
                            "title": "Set retries = -1",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Set retries = -1",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                                  "variable_value_new": -1
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02I266TYM2YSL3PpGaiyXIsgROoNQjHXMcM",
                            "name": "Execute Python Script",
                            "title": "Process Response",
                            "type": "python3.script",
                            "base_type": "activity",
                            "properties": {
                              "action_timeout": 180,
                              "continue_on_failure": false,
                              "display_name": "Process Response",
                              "script": "import json\nimport sys\n\ntry:\n  o_response_data = json.loads(sys.argv[1])['data']\nexcept:\n  o_response_data = ''\n\no_response_data = json.dumps(o_response_data)",
                              "script_arguments": [
                                "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.response_body$"
                              ],
                              "script_queries": [
                                {
                                  "script_query": "o_response_data",
                                  "script_query_name": "o_response_data",
                                  "script_query_type": "string"
                                }
                              ],
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02I266U0QAP0X6lNKHgqDL0Ypta3Be4j2Ww",
                            "name": "Set Variables",
                            "title": "Set Variables",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Set Variables",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.output.variable_workflow_02I266TFAEV8D3GCoOMaIwTjS2YvkT6j7r1$",
                                  "variable_value_new": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.response_body$"
                                },
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.output.variable_workflow_02I26J3PGLV4K1oc7FTRaHXd51SPELwGAhH$",
                                  "variable_value_new": "$activity.definition_activity_02I266TYM2YSL3PpGaiyXIsgROoNQjHXMcM.output.script_queries.o_response_data$"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02I266U2TYTAC4BiCeb8jS1msQtE0QHr0qq",
                        "name": "Condition Branch",
                        "title": "OpenAi Request Failed And Retries Available",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.succeeded$",
                              "operator": "eq",
                              "right_operand": false
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                              "operator": "gt",
                              "right_operand": 0
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "OpenAi Request Failed And Retries Available",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02I266U4ZY8255vGujRRe9yD5wfAFAnFcgg",
                            "name": "Set Variables",
                            "title": "Decrease retry counter",
                            "type": "core.set_multiple_variables",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Decrease retry counter",
                              "skip_execution": false,
                              "variables_to_update": [
                                {
                                  "variable_to_update": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                                  "variable_value_new": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$ - 1"
                                }
                              ]
                            },
                            "object_type": "definition_activity"
                          },
                          {
                            "unique_name": "definition_activity_02I266U6JDJ6K7JIP5jxZXC5XupJlwMjySB",
                            "name": "Sleep",
                            "title": "Sleep",
                            "type": "core.sleep",
                            "base_type": "activity",
                            "properties": {
                              "continue_on_failure": false,
                              "display_name": "Sleep",
                              "skip_execution": false,
                              "sleep_interval": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAFDDL5ebEkqQTTISxGJFUIaxr0i$"
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      },
                      {
                        "unique_name": "definition_activity_02I266U85XQK071zSwyk6hVR0I2sgZAR0Fu",
                        "name": "Condition Branch",
                        "title": "OpenAi Request Failed And No Retries",
                        "type": "logic.condition_block",
                        "base_type": "activity",
                        "properties": {
                          "condition": {
                            "left_operand": {
                              "left_operand": "$activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.succeeded$",
                              "operator": "eq",
                              "right_operand": false
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$workflow.definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z.local.variable_workflow_02I266TFAF4SD2PIbMpqVcpmQSdQnUWYNQq$",
                              "operator": "eq",
                              "right_operand": 0
                            }
                          },
                          "continue_on_failure": false,
                          "display_name": "OpenAi Request Failed And No Retries",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "actions": [
                          {
                            "unique_name": "definition_activity_02I266U9UB00Q4Cnaif6Gd77LFiBBJXnMDS",
                            "name": "Completed",
                            "title": "Failed",
                            "type": "logic.completed",
                            "base_type": "activity",
                            "properties": {
                              "completion_type": "failed-completed",
                              "continue_on_failure": false,
                              "display_name": "Failed",
                              "result_message": "Error with OpenAI Request: $activity.definition_activity_02I266TSANHZT6LiLrUUxPkN9C6RZFFT3uH.output.error.message$",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
          "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
        ]
      }
    },
    {
      "workflow": {
        "unique_name": "definition_workflow_02I5G6LQ5724F6L6nXXkLBgBlB2uYEife8z",
        "name": "Pinecone - Upsert Data",
        "title": "Pinecone - Upsert Data",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "i_vectors",
              "type": "datatype.string",
              "description": "A list of vectors in format:\n\n[\n      {\n        \"id\": \"A\", \n        \"values\": [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]\n      },\n      {\n        \"id\": \"B\", \n        \"values\": [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]\n      }\n]",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false,
              "variable_string_format": "json"
            },
            "unique_name": "variable_workflow_02I5GYRHAONX43MXlxcBUBW1oBa2Hyemp5S",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "display_name": "Pinecone - Upsert Data",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "target_type": "web-service.endpoint",
            "target_id": "definition_target_02I5GUFEBFQPG6DgRQYBBNZkMkfCBUqU06c",
            "execute_on_workflow_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02I5GV6KOQISM7Kqe7SjjpNg2c0qGSqCewZ",
            "name": "HTTP Request",
            "title": "Upsert Vectors",
            "type": "web-service.http_request",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "allow_auto_redirect": true,
              "allow_headers_redirect": false,
              "body": "{\n    \"vectors\": $workflow.definition_workflow_02I5G6LQ5724F6L6nXXkLBgBlB2uYEife8z.input.variable_workflow_02I5GYRHAONX43MXlxcBUBW1oBa2Hyemp5S$\n}",
              "content_type": "application/json",
              "continue_on_error_status_code": false,
              "continue_on_failure": false,
              "custom_headers": [
                {
                  "name": "Api-Key",
                  "value": "$global.variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm.global.variable_02I5GTCFCBLWT1Bu8x7ab86PH1hOikFoFmm$"
                }
              ],
              "display_name": "Upsert Vectors",
              "method": "POST",
              "relative_url": "/vectors/upsert",
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "use_workflow_target": true
              }
            },
            "object_type": "definition_activity"
          }
        ],
        "categories": [
          "category_02JGJ1B20PTGB3vXZAUaOWVEM7XZZj7QV9M",
          "category_025W2J2HK90LP3gVw454IoXQ0Qd1anzcY85"
        ]
      }
    }
  ],
  "dependent_workflows": [
    "definition_workflow_02I266TEM4CGB2pfVwMltkVpvSeluOICz5Z",
    "definition_workflow_02I5G6LQ5724F6L6nXXkLBgBlB2uYEife8z"
  ]
}